{"version":3,"file":"src_global_actions_ui_calls_ts.f45a513890b818c5e8b8.js","mappings":"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","sources":["webpack://telegram-t/./src/global/actions/api/chats.ts","webpack://telegram-t/./src/global/actions/ui/calls.ts","webpack://telegram-t/./src/global/reducers/calls.ts"],"sourcesContent":["import type {\n  ApiChat, ApiChatFolder, ApiChatlistExportedInvite,\n  ApiChatMember, ApiError, ApiMissingInvitedUser,\n} from '../../../api/types';\nimport type { RequiredGlobalActions } from '../../index';\nimport type {\n  ActionReturnType, GlobalState, TabArgs,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport {\n  ChatCreationProgress,\n  type ChatListType,\n  ManagementProgress,\n  NewChatMembersProgress,\n  SettingsScreens,\n  type ThreadId,\n} from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  CHAT_LIST_LOAD_SLICE,\n  DEBUG,\n  GLOBAL_SUGGESTED_CHANNELS_ID,\n  RE_TG_LINK,\n  SAVED_FOLDER_ID,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  TME_WEB_DOMAINS,\n  TMP_CHAT_ID,\n  TOP_CHAT_MESSAGES_PRELOAD_LIMIT,\n  TOPICS_SLICE,\n  TOPICS_SLICE_SECOND_LOAD,\n} from '../../../config';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatShareText, processDeepLink } from '../../../util/deeplink';\nimport { isDeepLink } from '../../../util/deepLinkParser';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport {\n  buildCollectionByKey, omit, pick, unique,\n} from '../../../util/iteratees';\nimport { isLocalMessageId } from '../../../util/keys/messageKey';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { debounce, pause, throttle } from '../../../util/schedulers';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport {\n  getIsSavedDialog,\n  isChatArchived,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../helpers';\nimport {\n  addActionHandler, getGlobal, setGlobal,\n} from '../../index';\nimport {\n  addChatListIds,\n  addChatMembers,\n  addChats,\n  addMessages,\n  addSimilarBots,\n  addUsers,\n  addUserStatuses,\n  deleteChatMessages,\n  deletePeerPhoto,\n  deleteTopic,\n  leaveChat,\n  removeChatFromChatLists,\n  replaceChatFullInfo,\n  replaceChatListIds,\n  replaceChatListLoadingParameters,\n  replaceMessages,\n  replaceSimilarChannels,\n  replaceThreadParam,\n  replaceUserStatuses,\n  toggleSimilarChannels,\n  updateChat,\n  updateChatFullInfo,\n  updateChatLastMessageId,\n  updateChatListSecondaryInfo,\n  updateChats,\n  updateChatsLastMessageId,\n  updateListedTopicIds,\n  updateManagementProgress,\n  updateMissingInvitedUsers,\n  updatePeerFullInfo,\n  updateThread,\n  updateThreadInfo,\n  updateTopic,\n  updateTopics,\n  updateUser,\n  updateUsers,\n} from '../../reducers';\nimport { updateGroupCall } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat,\n  selectChatByUsername,\n  selectChatFolder,\n  selectChatFullInfo,\n  selectChatLastMessageId,\n  selectChatListLoadingParameters,\n  selectChatListType,\n  selectChatMessages,\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsChatPinned,\n  selectIsChatWithSelf,\n  selectLastServiceNotification,\n  selectPeer,\n  selectSimilarChannelIds,\n  selectStickerSet,\n  selectSupportChat,\n  selectTabState,\n  selectThread,\n  selectThreadInfo,\n  selectTopic,\n  selectTopics,\n  selectTopicsInfo,\n  selectUser,\n  selectUserByPhoneNumber,\n} from '../../selectors';\nimport { selectGroupCall } from '../../selectors/calls';\nimport { selectCurrentLimit } from '../../selectors/limits';\n\nconst TOP_CHAT_MESSAGES_PRELOAD_INTERVAL = 100;\nconst INFINITE_LOOP_MARKER = 100;\n\nconst CHATLIST_LIMIT_ERROR_LIST = new Set([\n  'FILTERS_TOO_MUCH',\n  'CHATLISTS_TOO_MUCH',\n  'INVITES_TOO_MUCH',\n]);\n\nconst runThrottledForLoadTopChats = throttle((cb) => cb(), 3000, true);\nconst runDebouncedForLoadFullChat = debounce((cb) => cb(), 500, false, true);\n\naddActionHandler('preloadTopChatMessages', async (global, actions): Promise<void> => {\n  const preloadedChatIds = new Set<string>();\n\n  for (let i = 0; i < TOP_CHAT_MESSAGES_PRELOAD_LIMIT; i++) {\n    await pause(TOP_CHAT_MESSAGES_PRELOAD_INTERVAL);\n\n    global = getGlobal();\n    const currentChatIds = Object.values(global.byTabId)\n      // eslint-disable-next-line @typescript-eslint/no-loop-func\n      .map(({ id: tabId }) => selectCurrentMessageList(global, tabId)?.chatId)\n      .filter(Boolean);\n\n    const folderAllOrderedIds = getOrderedIds(ALL_FOLDER_ID);\n    const nextChatId = folderAllOrderedIds?.find((id) => !currentChatIds.includes(id) && !preloadedChatIds.has(id));\n    if (!nextChatId) {\n      return;\n    }\n\n    preloadedChatIds.add(nextChatId);\n\n    actions.loadViewportMessages({ chatId: nextChatId, threadId: MAIN_THREAD_ID, tabId: getCurrentTabId() });\n  }\n});\n\nfunction abortChatRequests(chatId: string, threadId?: ThreadId) {\n  callApi('abortChatRequests', { chatId, threadId });\n}\n\nfunction abortChatRequestsForCurrentChat<T extends GlobalState>(\n  global: T, newChatId?: string, newThreadId?: ThreadId,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  const currentChatId = currentMessageList?.chatId;\n  const currentThreadId = currentMessageList?.threadId;\n\n  if (currentChatId && (currentChatId !== newChatId || currentThreadId !== newThreadId)) {\n    const [isChatOpened, isThreadOpened] = Object.values(global.byTabId)\n      .reduce(([accHasChatOpened, accHasThreadOpened], { id: otherTabId }) => {\n        if (otherTabId === tabId || (accHasChatOpened && accHasThreadOpened)) {\n          return [accHasChatOpened, accHasThreadOpened];\n        }\n\n        const otherMessageList = selectCurrentMessageList(global, otherTabId);\n        const isSameChat = otherMessageList?.chatId === currentChatId;\n        const isSameThread = isSameChat && otherMessageList?.threadId === currentThreadId;\n\n        return [accHasChatOpened || isSameChat, accHasThreadOpened || isSameThread];\n      }, [currentChatId === newChatId, false]);\n\n    const shouldAbortChatRequests = !isChatOpened || !isThreadOpened;\n\n    if (shouldAbortChatRequests) {\n      abortChatRequests(currentChatId, isChatOpened ? currentThreadId : undefined);\n    }\n  }\n}\n\naddActionHandler('openChat', (global, actions, payload): ActionReturnType => {\n  const {\n    id, type, noForumTopicPanel, shouldReplaceHistory, shouldReplaceLast,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  actions.processOpenChatOrThread({\n    chatId: id,\n    type,\n    threadId: MAIN_THREAD_ID,\n    noForumTopicPanel,\n    shouldReplaceHistory,\n    shouldReplaceLast,\n    tabId,\n  });\n\n  abortChatRequestsForCurrentChat(global, id, MAIN_THREAD_ID, tabId);\n\n  if (!id || id === TMP_CHAT_ID) {\n    return;\n  }\n\n  const chat = selectChat(global, id);\n\n  if (chat?.hasUnreadMark) {\n    actions.toggleChatUnread({ id });\n  }\n\n  const isChatOnlySummary = !selectChatLastMessageId(global, id);\n\n  if (!chat) {\n    if (selectIsChatWithSelf(global, id)) {\n      void callApi('fetchChat', { type: 'self' });\n    } else {\n      const user = selectUser(global, id);\n      if (user) {\n        void callApi('fetchChat', { type: 'user', user });\n      }\n    }\n  } else if (isChatOnlySummary && !chat.isMin) {\n    actions.requestChatUpdate({ chatId: id });\n  }\n});\n\naddActionHandler('openSavedDialog', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId(), ...otherParams } = payload;\n\n  actions.openThread({\n    chatId: global.currentUserId!,\n    threadId: chatId,\n    tabId,\n    ...otherParams,\n  });\n});\n\naddActionHandler('openThread', async (global, actions, payload): Promise<void> => {\n  const {\n    type, isComments, noForumTopicPanel, shouldReplaceHistory, shouldReplaceLast,\n    focusMessageId,\n    tabId = getCurrentTabId(),\n  } = payload;\n  let { chatId } = payload;\n  let threadId: ThreadId | undefined;\n  let loadingChatId: string;\n  let loadingThreadId: ThreadId;\n\n  if (!isComments) {\n    loadingChatId = payload.chatId;\n    threadId = payload.threadId;\n    loadingThreadId = threadId;\n\n    const originalChat = selectChat(global, loadingChatId);\n    if (threadId === MAIN_THREAD_ID) {\n      actions.openChat({\n        id: chatId,\n        type,\n        noForumTopicPanel,\n        shouldReplaceHistory,\n        shouldReplaceLast,\n        tabId,\n      });\n      return;\n    } else if (originalChat?.isForum || (chatId && getIsSavedDialog(chatId, threadId, global.currentUserId))) {\n      actions.processOpenChatOrThread({\n        chatId,\n        type,\n        threadId,\n        isComments,\n        noForumTopicPanel,\n        shouldReplaceHistory,\n        shouldReplaceLast,\n        tabId,\n      });\n      return;\n    }\n  } else {\n    const { originChannelId, originMessageId } = payload;\n\n    loadingChatId = originChannelId;\n    loadingThreadId = originMessageId;\n  }\n\n  const chat = selectChat(global, loadingChatId);\n  const threadInfo = selectThreadInfo(global, loadingChatId, loadingThreadId);\n  const thread = selectThread(global, loadingChatId, loadingThreadId);\n  if (!chat) return;\n\n  abortChatRequestsForCurrentChat(global, loadingChatId, loadingThreadId, tabId);\n\n  if (chatId\n    && threadInfo?.threadId\n    && (isComments || (thread?.listedIds?.length && thread.listedIds.includes(Number(threadInfo.threadId))))) {\n    global = updateTabState(global, {\n      loadingThread: undefined,\n    }, tabId);\n    setGlobal(global);\n    actions.processOpenChatOrThread({\n      chatId,\n      type,\n      threadId: threadInfo.threadId,\n      isComments,\n      noForumTopicPanel,\n      shouldReplaceHistory,\n      shouldReplaceLast,\n      tabId,\n    });\n    return;\n  }\n\n  let { loadingThread } = selectTabState(global, tabId);\n  if (loadingThread) {\n    abortChatRequests(loadingThread.loadingChatId, loadingThread.loadingMessageId);\n  }\n\n  global = updateTabState(global, {\n    loadingThread: {\n      loadingChatId,\n      loadingMessageId: Number(loadingThreadId),\n    },\n  }, tabId);\n  setGlobal(global);\n\n  const openPreviousChat = () => {\n    // eslint-disable-next-line eslint-multitab-tt/no-immediate-global\n    const currentGlobal = getGlobal();\n    if (isComments\n      || selectCurrentMessageList(currentGlobal, tabId)?.chatId !== loadingChatId\n      || selectCurrentMessageList(currentGlobal, tabId)?.threadId !== loadingThreadId) {\n      return;\n    }\n    actions.openPreviousChat({ tabId });\n  };\n\n  if (!isComments) {\n    actions.processOpenChatOrThread({\n      chatId,\n      type,\n      threadId: threadId!,\n      tabId,\n      isComments,\n      noForumTopicPanel,\n      shouldReplaceHistory,\n      shouldReplaceLast,\n    });\n  }\n\n  const result = await callApi('fetchDiscussionMessage', {\n    chat: selectChat(global, loadingChatId)!,\n    messageId: Number(loadingThreadId),\n  });\n\n  global = getGlobal();\n  loadingThread = selectTabState(global, tabId).loadingThread;\n  if (loadingThread?.loadingChatId !== loadingChatId || loadingThread?.loadingMessageId !== loadingThreadId) {\n    openPreviousChat();\n    return;\n  }\n\n  if (!result) {\n    global = updateTabState(global, {\n      loadingThread: undefined,\n    }, tabId);\n    setGlobal(global);\n\n    actions.showNotification({\n      message: langProvider.oldTranslate(isComments ? 'ChannelPostDeleted' : 'lng_message_not_found'),\n      tabId,\n    });\n\n    openPreviousChat();\n    return;\n  }\n\n  threadId ??= result.threadId;\n  chatId ??= result.chatId;\n\n  if (!chatId) {\n    openPreviousChat();\n    return;\n  }\n\n  global = getGlobal();\n  global = addMessages(global, result.messages);\n  if (isComments) {\n    global = updateThreadInfo(global, loadingChatId, loadingThreadId, {\n      threadId,\n    });\n\n    global = updateThreadInfo(global, chatId, threadId, {\n      isCommentsInfo: false,\n      threadId,\n      chatId,\n      fromChannelId: loadingChatId,\n      fromMessageId: loadingThreadId,\n      ...(threadInfo\n        && pick(threadInfo, ['messagesCount', 'lastMessageId', 'lastReadInboxMessageId', 'recentReplierIds'])),\n    });\n  }\n  global = updateThread(global, chatId, threadId, {\n    firstMessageId: result.firstMessageId,\n  });\n  setGlobal(global);\n\n  if (focusMessageId) {\n    actions.focusMessage({\n      chatId,\n      threadId: threadId!,\n      messageId: focusMessageId,\n      tabId,\n    });\n  }\n\n  actions.loadViewportMessages({\n    chatId,\n    threadId,\n    tabId,\n    onError: () => {\n      global = getGlobal();\n      global = updateTabState(global, {\n        loadingThread: undefined,\n      }, tabId);\n      setGlobal(global);\n\n      actions.showNotification({\n        message: langProvider.oldTranslate('Group.ErrorAccessDenied'),\n        tabId,\n      });\n    },\n    onLoaded: () => {\n      global = getGlobal();\n      loadingThread = selectTabState(global, tabId).loadingThread;\n      if (loadingThread?.loadingChatId !== loadingChatId || loadingThread?.loadingMessageId !== loadingThreadId) {\n        return;\n      }\n\n      global = updateTabState(global, {\n        loadingThread: undefined,\n      }, tabId);\n      setGlobal(global);\n\n      actions.processOpenChatOrThread({\n        chatId,\n        type,\n        threadId: threadId!,\n        tabId,\n        isComments,\n        noForumTopicPanel,\n        shouldReplaceHistory,\n        shouldReplaceLast,\n      });\n    },\n  });\n});\n\naddActionHandler('openLinkedChat', async (global, actions, payload): Promise<void> => {\n  const { id, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, id);\n  if (!chat) {\n    return;\n  }\n\n  const chatFullInfo = await callApi('fetchFullChat', chat);\n\n  if (chatFullInfo?.fullInfo?.linkedChatId) {\n    actions.openChat({ id: chatFullInfo.fullInfo.linkedChatId, tabId });\n  }\n});\n\naddActionHandler('openSupportChat', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const chat = selectSupportChat(global);\n  if (chat) {\n    actions.openChat({ id: chat.id, shouldReplaceHistory: true, tabId });\n    return;\n  }\n\n  actions.openChat({ id: TMP_CHAT_ID, shouldReplaceHistory: true, tabId });\n\n  const result = await callApi('fetchChat', { type: 'support' });\n  if (result) {\n    actions.openChat({ id: result.chatId, shouldReplaceHistory: true, tabId });\n  }\n});\n\naddActionHandler('loadAllChats', async (global, actions, payload): Promise<void> => {\n  const { whenFirstBatchDone } = payload;\n  const listType = payload.listType;\n  let isCallbackFired = false;\n  let i = 0;\n\n  while (!global.chats.isFullyLoaded[listType]) {\n    if (i++ >= INFINITE_LOOP_MARKER) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.error('`actions/loadAllChats`: Infinite loop detected');\n      }\n\n      return;\n    }\n\n    global = getGlobal();\n\n    if (global.connectionState !== 'connectionStateReady' || global.authState !== 'authorizationStateReady') {\n      return;\n    }\n\n    await loadChats(\n      listType,\n      true,\n    );\n\n    if (!isCallbackFired) {\n      await whenFirstBatchDone?.();\n      isCallbackFired = true;\n    }\n\n    global = getGlobal();\n  }\n});\n\naddActionHandler('loadFullChat', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, force, withPhotos,\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const loadChat = async () => {\n    await loadFullChat(global, actions, chat);\n    if (withPhotos) {\n      actions.loadMoreProfilePhotos({ peerId: chatId, shouldInvalidateCache: true });\n    }\n  };\n\n  if (force) {\n    void loadChat();\n  } else {\n    runDebouncedForLoadFullChat(loadChat);\n  }\n});\n\naddActionHandler('loadTopChats', (): ActionReturnType => {\n  runThrottledForLoadTopChats(() => {\n    loadChats('active', undefined, true);\n    loadChats('archived', undefined, true);\n  });\n});\n\naddActionHandler('requestChatUpdate', (global, actions, payload): ActionReturnType => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  void callApi('requestChatUpdate', {\n    chat,\n    ...(chatId === SERVICE_NOTIFICATIONS_USER_ID && {\n      lastLocalMessage: selectLastServiceNotification(global)?.message,\n    }),\n  });\n});\n\naddActionHandler('requestSavedDialogUpdate', async (global, actions, payload): Promise<void> => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('fetchMessages', {\n    chat,\n    isSavedDialog: true,\n    limit: 1,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n\n  global = addMessages(global, result.messages);\n\n  if (result.messages.length) {\n    global = updateChatLastMessageId(global, chatId, result.messages[0].id, 'saved');\n    global = addChatListIds(global, 'saved', [chatId]);\n\n    setGlobal(global);\n  } else {\n    global = removeChatFromChatLists(global, chatId, 'saved');\n\n    setGlobal(global);\n\n    Object.values(global.byTabId).forEach(({ id: tabId }) => {\n      const currentMessageList = selectCurrentMessageList(global, tabId);\n      if (!currentMessageList) return;\n      const { chatId: tabChatId, threadId } = currentMessageList;\n\n      if (selectIsChatWithSelf(global, tabChatId) && threadId === chatId) {\n        actions.openChat({ id: undefined, tabId });\n      }\n    });\n  }\n});\n\naddActionHandler('updateChatMutedState', (global, actions, payload): ActionReturnType => {\n  const { chatId, muteUntil = 0 } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const isMuted = payload.isMuted ?? muteUntil > 0;\n\n  global = updateChat(global, chatId, { isMuted });\n  setGlobal(global);\n  void callApi('updateChatMutedState', { chat, isMuted, muteUntil });\n});\n\naddActionHandler('updateTopicMutedState', (global, actions, payload): ActionReturnType => {\n  const { chatId, topicId, muteUntil = 0 } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const isMuted = payload.isMuted ?? muteUntil > 0;\n\n  global = updateTopic(global, chatId, topicId, { isMuted });\n  setGlobal(global);\n  void callApi('updateTopicMutedState', {\n    chat, topicId, isMuted, muteUntil,\n  });\n});\n\naddActionHandler('createChannel', async (global, actions, payload): Promise<void> => {\n  const {\n    title, about, photo, memberIds, tabId = getCurrentTabId(),\n  } = payload;\n\n  const users = (memberIds as string[])\n    .map((id) => selectUser(global, id))\n    .filter(Boolean);\n\n  global = updateTabState(global, {\n    chatCreation: {\n      progress: ChatCreationProgress.InProgress,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  let createdChannel: ApiChat | undefined;\n  let missingInvitedUsers: ApiMissingInvitedUser[] | undefined;\n  try {\n    const result = await callApi('createChannel', { title, about, users });\n    createdChannel = result?.channel;\n    missingInvitedUsers = result?.missingUsers;\n  } catch (error) {\n    global = getGlobal();\n\n    global = updateTabState(global, {\n      chatCreation: {\n        progress: ChatCreationProgress.Error,\n      },\n    }, tabId);\n\n    setGlobal(global);\n\n    if ((error as ApiError).message === 'CHANNELS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'channels', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n\n  if (!createdChannel) {\n    return;\n  }\n\n  const { id: channelId, accessHash } = createdChannel;\n\n  global = getGlobal();\n  global = updateChat(global, channelId, createdChannel);\n  global = updateTabState(global, {\n    chatCreation: {\n      ...selectTabState(global, tabId).chatCreation,\n      progress: createdChannel ? ChatCreationProgress.Complete : ChatCreationProgress.Error,\n    },\n  }, tabId);\n  setGlobal(global);\n  actions.openChat({ id: channelId, shouldReplaceHistory: true, tabId });\n\n  if (missingInvitedUsers) {\n    global = getGlobal();\n    global = updateMissingInvitedUsers(global, channelId, missingInvitedUsers, tabId);\n    setGlobal(global);\n  }\n\n  if (channelId && accessHash && photo) {\n    await callApi('editChatPhoto', { chatId: channelId, accessHash, photo });\n  }\n});\n\naddActionHandler('joinChannel', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const { id: channelId, accessHash } = chat;\n\n  if (!(channelId && accessHash)) {\n    return;\n  }\n\n  try {\n    await callApi('joinChannel', { channelId, accessHash });\n  } catch (error) {\n    if ((error as ApiError).message === 'CHANNELS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'channels', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n});\n\naddActionHandler('deleteChatUser', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, userId, shouldRevokeHistory, tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, chatId);\n  const user = selectUser(global, userId);\n  if (!chat || !user) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  void callApi('deleteChatUser', { chat, user, shouldRevokeHistory });\n});\n\naddActionHandler('deleteChat', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  void callApi('deleteChat', { chatId: chat.id });\n});\n\naddActionHandler('leaveChannel', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  const { id: channelId, accessHash } = chat;\n  if (channelId && accessHash) {\n    await callApi('leaveChannel', { channelId, accessHash });\n    global = getGlobal();\n    const chatMessages = selectChatMessages(global, chatId);\n    const localMessageIds = Object.keys(chatMessages).map(Number).filter(isLocalMessageId);\n    global = deleteChatMessages(global, chatId, localMessageIds);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('deleteChannel', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  const { id: channelId, accessHash } = chat;\n  if (channelId && accessHash) {\n    void callApi('deleteChannel', { channelId, accessHash });\n  }\n});\n\naddActionHandler('createGroupChat', async (global, actions, payload): Promise<void> => {\n  const {\n    title, memberIds, photo, tabId = getCurrentTabId(),\n  } = payload;\n  const users = (memberIds as string[])\n    .map((id) => selectUser(global, id))\n    .filter(Boolean);\n\n  global = updateTabState(global, {\n    chatCreation: {\n      progress: ChatCreationProgress.InProgress,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  try {\n    const { chat: createdChat, missingUsers } = await callApi('createGroupChat', {\n      title,\n      users,\n    }) ?? {};\n\n    if (!createdChat) {\n      return;\n    }\n\n    const { id: chatId } = createdChat;\n\n    global = getGlobal();\n    global = updateChat(global, chatId, createdChat);\n    global = updateTabState(global, {\n      chatCreation: {\n        ...selectTabState(global, tabId).chatCreation,\n        progress: createdChat ? ChatCreationProgress.Complete : ChatCreationProgress.Error,\n      },\n    }, tabId);\n    setGlobal(global);\n    actions.openChat({\n      id: chatId,\n      shouldReplaceHistory: true,\n      tabId,\n    });\n\n    if (missingUsers) {\n      global = getGlobal();\n      global = updateMissingInvitedUsers(global, chatId, missingUsers, tabId);\n      setGlobal(global);\n    }\n\n    if (chatId && photo) {\n      await callApi('editChatPhoto', {\n        chatId,\n        photo,\n      });\n    }\n  } catch (err) {\n    if ((err as ApiError).message === 'USERS_TOO_FEW') {\n      global = getGlobal();\n      global = updateTabState(global, {\n        chatCreation: {\n          ...selectTabState(global, tabId).chatCreation,\n          progress: ChatCreationProgress.Error,\n          error: 'CreateGroupError',\n        },\n      }, tabId);\n      setGlobal(global);\n    }\n  }\n});\n\naddActionHandler('toggleChatPinned', (global, actions, payload): ActionReturnType => {\n  const { id, folderId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, id);\n  if (!chat) {\n    return;\n  }\n\n  const limit = selectCurrentLimit(global, 'dialogFolderPinned');\n\n  if (folderId) {\n    const folder = selectChatFolder(global, folderId);\n    if (folder) {\n      const shouldBePinned = !selectIsChatPinned(global, id, folderId);\n\n      const { pinnedChatIds, includedChatIds } = folder;\n      const newPinnedIds = shouldBePinned\n        ? [id, ...(pinnedChatIds || [])]\n        : (pinnedChatIds || []).filter((pinnedId) => pinnedId !== id);\n\n      // With both Pin and Unpin we need to re-add a user to the included group\n      const newIncludedChatIds = [id, ...includedChatIds];\n\n      void callApi('editChatFolder', {\n        id: folderId,\n        folderUpdate: {\n          ...folder,\n          pinnedChatIds: newPinnedIds,\n          includedChatIds: newIncludedChatIds,\n        },\n      });\n    }\n  } else {\n    const listType = selectChatListType(global, id);\n    const isPinned = selectIsChatPinned(global, id, listType === 'archived' ? ARCHIVED_FOLDER_ID : undefined);\n\n    const ids = global.chats.orderedPinnedIds[listType === 'archived' ? 'archived' : 'active'];\n    if ((ids?.length || 0) >= limit && !isPinned) {\n      actions.openLimitReachedModal({\n        limit: 'dialogFolderPinned',\n        tabId,\n      });\n      return;\n    }\n    void callApi('toggleChatPinned', { chat, shouldBePinned: !isPinned });\n  }\n});\n\naddActionHandler('toggleChatArchived', (global, actions, payload): ActionReturnType => {\n  const { id } = payload;\n  const chat = selectChat(global, id);\n  if (chat) {\n    void callApi('toggleChatArchived', {\n      chat,\n      folderId: isChatArchived(chat) ? 0 : ARCHIVED_FOLDER_ID,\n    });\n  }\n});\n\naddActionHandler('toggleSavedDialogPinned', (global, actions, payload): ActionReturnType => {\n  const { id, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, id);\n  if (!chat) {\n    return;\n  }\n\n  const limit = selectCurrentLimit(global, 'savedDialogsPinned');\n\n  const isPinned = selectIsChatPinned(global, id, SAVED_FOLDER_ID);\n\n  const ids = global.chats.orderedPinnedIds.saved;\n  if ((ids?.length || 0) >= limit && !isPinned) {\n    actions.openLimitReachedModal({\n      limit: 'savedDialogsPinned',\n      tabId,\n    });\n    return;\n  }\n  void callApi('toggleSavedDialogPinned', { chat, shouldBePinned: !isPinned });\n});\n\naddActionHandler('loadChatFolders', async (global): Promise<void> => {\n  const chatFolders = await callApi('fetchChatFolders');\n\n  if (chatFolders) {\n    global = getGlobal();\n\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        ...chatFolders,\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('loadRecommendedChatFolders', async (global): Promise<void> => {\n  const recommendedChatFolders = await callApi('fetchRecommendedChatFolders');\n\n  if (recommendedChatFolders) {\n    global = getGlobal();\n\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        recommended: recommendedChatFolders,\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('editChatFolders', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, idsToRemove, idsToAdd, tabId = getCurrentTabId(),\n  } = payload;\n  const limit = selectCurrentLimit(global, 'dialogFiltersChats');\n\n  const isLimitReached = idsToAdd\n    .some((id) => selectChatFolder(global, id)!.includedChatIds.length >= limit);\n  if (isLimitReached) {\n    actions.openLimitReachedModal({ limit: 'dialogFiltersChats', tabId });\n    return;\n  }\n\n  idsToRemove.forEach(async (id) => {\n    const folder = selectChatFolder(global, id);\n    if (folder) {\n      await callApi('editChatFolder', {\n        id,\n        folderUpdate: {\n          ...folder,\n          pinnedChatIds: folder.pinnedChatIds?.filter((pinnedId) => pinnedId !== chatId),\n          includedChatIds: folder.includedChatIds.filter((includedId) => includedId !== chatId),\n        },\n      });\n    }\n  });\n\n  idsToAdd.forEach(async (id) => {\n    const folder = selectChatFolder(global, id);\n    if (folder) {\n      await callApi('editChatFolder', {\n        id,\n        folderUpdate: {\n          ...folder,\n          includedChatIds: folder.includedChatIds.concat(chatId),\n        },\n      });\n    }\n  });\n});\n\naddActionHandler('editChatFolder', (global, actions, payload): ActionReturnType => {\n  const { id, folderUpdate } = payload;\n  const folder = selectChatFolder(global, id);\n\n  if (folder) {\n    void callApi('editChatFolder', {\n      id,\n      folderUpdate: {\n        id,\n        emoticon: folder.emoticon,\n        pinnedChatIds: folder.pinnedChatIds,\n        ...folderUpdate,\n      },\n    });\n  }\n});\n\naddActionHandler('addChatFolder', async (global, actions, payload): Promise<void> => {\n  const { folder, tabId = getCurrentTabId() } = payload;\n  const { orderedIds, byId } = global.chatFolders;\n\n  const limit = selectCurrentLimit(global, 'dialogFilters');\n  if (Object.keys(byId).length >= limit) {\n    actions.openLimitReachedModal({\n      limit: 'dialogFilters',\n      tabId,\n    });\n    return;\n  }\n\n  const maxId = Math.max(...(orderedIds || []), ARCHIVED_FOLDER_ID);\n\n  // Clear fields from recommended folders\n  const { id: recommendedId, description, ...newFolder } = folder;\n\n  const newId = maxId + 1;\n  const folderUpdate = {\n    id: newId,\n    ...newFolder,\n  };\n  await callApi('editChatFolder', {\n    id: newId,\n    folderUpdate,\n  });\n\n  // Update called from the above `callApi` is throttled, but we need to apply changes immediately\n  actions.apiUpdate({\n    '@type': 'updateChatFolder',\n    id: newId,\n    folder: folderUpdate,\n  });\n\n  actions.requestNextSettingsScreen({\n    foldersAction: {\n      type: 'setFolderId',\n      payload: maxId + 1,\n    },\n    tabId,\n  });\n\n  if (!description) {\n    return;\n  }\n\n  global = getGlobal();\n  const { recommended } = global.chatFolders;\n\n  if (recommended) {\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        recommended: recommended.filter(({ id }) => id !== recommendedId),\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('sortChatFolders', async (global, actions, payload): Promise<void> => {\n  const { folderIds } = payload;\n\n  const result = await callApi('sortChatFolders', folderIds);\n  if (result) {\n    global = getGlobal();\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        orderedIds: folderIds,\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('deleteChatFolder', async (global, actions, payload): Promise<void> => {\n  const { id } = payload;\n  const folder = selectChatFolder(global, id);\n\n  if (folder) {\n    await callApi('deleteChatFolder', id);\n  }\n});\n\naddActionHandler('toggleChatUnread', (global, actions, payload): ActionReturnType => {\n  const { id } = payload;\n  const chat = selectChat(global, id);\n  if (chat) {\n    if (chat.unreadCount) {\n      void callApi('markMessageListRead', { chat, threadId: MAIN_THREAD_ID });\n    } else {\n      void callApi('toggleDialogUnread', {\n        chat,\n        hasUnreadMark: !chat.hasUnreadMark,\n      });\n    }\n  }\n});\n\naddActionHandler('markTopicRead', (global, actions, payload): ActionReturnType => {\n  const { chatId, topicId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const topic = selectTopic(global, chatId, topicId);\n\n  const lastTopicMessageId = topic?.lastMessageId;\n  if (!lastTopicMessageId) return;\n\n  void callApi('markMessageListRead', {\n    chat,\n    threadId: topicId,\n    maxId: lastTopicMessageId,\n  });\n\n  global = getGlobal();\n  global = updateTopic(global, chatId, topicId, {\n    unreadCount: 0,\n  });\n  global = updateThreadInfo(global, chatId, topicId, {\n    lastReadInboxMessageId: lastTopicMessageId,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('checkChatInvite', async (global, actions, payload): Promise<void> => {\n  const { hash, tabId = getCurrentTabId() } = payload;\n\n  const result = await callApi('checkChatInvite', hash);\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  if (result.users) {\n    global = addUsers(global, buildCollectionByKey(result.users, 'id'));\n  }\n\n  if (result.chat) {\n    global = addChats(global, buildCollectionByKey([result.chat], 'id'));\n    setGlobal(global);\n    actions.openChat({ id: result.chat.id, tabId });\n    return;\n  }\n\n  if (result.invite.subscriptionFormId) {\n    global = updateTabState(global, {\n      starsPayment: {\n        inputInvoice: {\n          type: 'chatInviteSubscription',\n          hash,\n        },\n        subscriptionInfo: result.invite,\n        status: 'pending',\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = updateTabState(global, {\n    chatInviteModal: {\n      hash,\n      inviteInfo: result.invite,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('openChatByPhoneNumber', async (global, actions, payload): Promise<void> => {\n  const {\n    phoneNumber, startAttach, attach, text, tabId = getCurrentTabId(),\n  } = payload;\n\n  // Open temporary empty chat to make the click response feel faster\n  actions.openChat({ id: TMP_CHAT_ID, tabId });\n\n  const chat = await fetchChatByPhoneNumber(global, phoneNumber);\n  if (!chat) {\n    actions.openPreviousChat({ tabId });\n    actions.showNotification({\n      message: langProvider.oldTranslate('lng_username_by_phone_not_found').replace('{phone}', phoneNumber),\n      tabId,\n    });\n    return;\n  }\n\n  if (text) {\n    actions.openChatWithDraft({ chatId: chat.id, text: { text }, tabId });\n  } else {\n    actions.openChat({ id: chat.id, tabId });\n  }\n\n  if (attach) {\n    global = getGlobal();\n    openAttachMenuFromLink(global, actions, chat.id, attach, startAttach, tabId);\n  }\n});\n\naddActionHandler('openTelegramLink', async (global, actions, payload): Promise<void> => {\n  const {\n    url,\n    shouldIgnoreCache,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const {\n    openChatByPhoneNumber,\n    checkChatInvite,\n    openStickerSet,\n    openChatWithDraft,\n    joinVoiceChatByLink,\n    openInvoice,\n    checkChatlistInvite,\n    openChatByUsername: openChatByUsernameAction,\n    openStoryViewerByUsername,\n    checkGiftCode,\n  } = actions;\n\n  if (isDeepLink(url)) {\n    const isProcessed = processDeepLink(url);\n    if (isProcessed || url.match(RE_TG_LINK)) {\n      return;\n    }\n  }\n\n  const uri = new URL(url.toLowerCase().startsWith('http') ? url : `https://${url}`);\n  if (TME_WEB_DOMAINS.has(uri.hostname) && uri.pathname === '/') {\n    window.open(uri.toString(), '_blank', 'noopener');\n    return;\n  }\n\n  const hostname = TME_WEB_DOMAINS.has(uri.hostname) ? 't.me' : uri.hostname;\n  const hostParts = hostname.split('.');\n  if (hostParts.length > 3) return;\n\n  const adaptedPathname = uri.pathname.replace(/^\\/?s\\//, '');\n  const pathname = hostParts.length === 3 ? `${hostParts[0]}/${adaptedPathname}` : adaptedPathname;\n  const [part1, part2, part3] = pathname.split('/').filter(Boolean).map((part) => decodeURI(part));\n  const params = Object.fromEntries(uri.searchParams);\n\n  let hash: string | undefined;\n  if (part1 === 'joinchat') {\n    hash = part2;\n  }\n\n  const storyId = part2 === 's' && (Number(part3) || undefined);\n\n  if (part1.match(/^\\+([0-9]+)(\\?|$)/)) {\n    openChatByPhoneNumber({\n      phoneNumber: part1.substr(1, part1.length - 1),\n      startAttach: params.startattach,\n      attach: params.attach,\n      text: params.text,\n      tabId,\n    });\n    return;\n  }\n\n  if (storyId) {\n    openStoryViewerByUsername({\n      username: part1,\n      storyId,\n      tabId,\n    });\n\n    return;\n  }\n\n  if (part1.startsWith(' ') || part1.startsWith('+')) {\n    hash = part1.substr(1, part1.length - 1);\n  }\n\n  if (hash) {\n    checkChatInvite({ hash, tabId });\n    return;\n  }\n\n  if (part1 === 'addstickers' || part1 === 'addemoji') {\n    openStickerSet({\n      stickerSetInfo: {\n        shortName: part2,\n      },\n      shouldIgnoreCache,\n      tabId,\n    });\n    return;\n  }\n\n  if (part1 === 'share') {\n    const text = formatShareText(params.url, params.text);\n    openChatWithDraft({ text, tabId });\n    return;\n  }\n\n  if (part1 === 'addlist') {\n    const slug = part2;\n    checkChatlistInvite({ slug, tabId });\n    return;\n  }\n\n  if (part1 === 'giftcode') {\n    const slug = part2;\n    checkGiftCode({ slug, tabId });\n    return;\n  }\n\n  const chatOrChannelPostId = part2 || undefined;\n  const messageId = part3 ? Number(part3) : undefined;\n  const commentId = params.comment ? Number(params.comment) : undefined;\n\n  const isWebApp = await checkWebAppExists(global, part1, part2);\n\n  const shouldTryOpenChat = (part1 && !part2) || Number.isInteger(Number(part2)) || isWebApp;\n\n  if (params.hasOwnProperty('voicechat') || params.hasOwnProperty('livestream')) {\n    joinVoiceChatByLink({\n      username: part1,\n      inviteHash: params.voicechat || params.livestream,\n      tabId,\n    });\n  } else if (part1.startsWith('$')) {\n    openInvoice({\n      type: 'slug',\n      slug: part1.substring(1),\n      tabId,\n    });\n  } else if (part1 === 'invoice') {\n    openInvoice({\n      type: 'slug',\n      slug: part2,\n      tabId,\n    });\n  } else if (shouldTryOpenChat) {\n    openChatByUsernameAction({\n      username: part1,\n      messageId: messageId || Number(chatOrChannelPostId),\n      threadId: messageId ? Number(chatOrChannelPostId) : undefined,\n      commentId,\n      startParam: params.start,\n      startAttach: params.startattach,\n      attach: params.attach,\n      startApp: params.startapp,\n      mode: params.mode,\n      originalParts: [part1, part2, part3],\n      tabId,\n    });\n  } else {\n    actions.openUrl({\n      url, shouldSkipModal: true, tabId, ignoreDeepLinks: true,\n    });\n  }\n});\n\naddActionHandler('processBoostParameters', async (global, actions, payload): Promise<void> => {\n  const { usernameOrId, isPrivate, tabId = getCurrentTabId() } = payload;\n\n  let chat: ApiChat | undefined;\n\n  if (isPrivate) {\n    chat = selectChat(global, usernameOrId);\n    if (!chat) {\n      actions.showNotification({ message: { key: 'PrivateChannelInaccessible' }, tabId });\n      return;\n    }\n  } else {\n    chat = await fetchChatByUsername(global, usernameOrId);\n    if (!chat) {\n      actions.showNotification({ message: { key: 'NoUsernameFound' }, tabId });\n      return;\n    }\n  }\n\n  if (!isChatChannel(chat) && !isChatSuperGroup(chat)) {\n    actions.openChat({ id: chat.id, tabId });\n    return;\n  }\n\n  actions.openBoostModal({\n    chatId: chat.id,\n    tabId,\n  });\n});\n\naddActionHandler('acceptChatInvite', async (global, actions, payload): Promise<void> => {\n  const { hash, tabId = getCurrentTabId() } = payload;\n  const result = await callApi('importChatInvite', { hash });\n  if (!result) {\n    return;\n  }\n\n  actions.openChat({ id: result.id, tabId });\n});\n\naddActionHandler('openChatByUsername', async (global, actions, payload): Promise<void> => {\n  const {\n    username, messageId, commentId, startParam, startAttach, attach, threadId, originalParts, startApp, mode,\n    text, onChatChanged, choose, ref,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectCurrentChat(global, tabId);\n  const webAppName = originalParts?.[1];\n  const isWebApp = webAppName && !Number(webAppName) && !originalParts?.[2];\n\n  if (!commentId) {\n    if (startAttach === undefined && messageId && !startParam && !ref\n      && chat?.usernames?.some((c) => c.username === username)) {\n      actions.focusMessage({\n        chatId: chat.id, threadId, messageId, tabId,\n      });\n      return;\n    }\n\n    if (startAttach !== undefined && choose) {\n      actions.processAttachBotParameters({\n        username,\n        filter: choose,\n        startParam: startAttach || startApp,\n        tabId,\n      });\n      return;\n    }\n\n    if (startApp !== undefined && !webAppName) {\n      const theme = extractCurrentThemeParams();\n      const chatByUsername = await fetchChatByUsername(global, username);\n      global = getGlobal();\n      const user = chatByUsername && selectUser(global, chatByUsername.id);\n      if (!chatByUsername || !chat || !user?.hasMainMiniApp) return;\n      actions.requestMainWebView({\n        botId: chatByUsername.id,\n        peerId: chat.id,\n        theme,\n        tabId,\n        mode,\n      });\n      return;\n    }\n    if (!isWebApp) {\n      await openChatByUsername(\n        global, actions, {\n          username,\n          threadId,\n          channelPostId: messageId,\n          startParam,\n          ref,\n          startAttach,\n          attach,\n          text,\n        }, tabId,\n      );\n      if (onChatChanged) {\n        // @ts-ignore\n        actions[onChatChanged.action](onChatChanged.payload);\n      }\n      return;\n    }\n  }\n\n  const usernameChat = selectChatByUsername(global, username);\n  if (commentId && messageId && usernameChat) {\n    actions.openThread({\n      isComments: true,\n      originChannelId: usernameChat.id,\n      originMessageId: messageId,\n      tabId,\n      focusMessageId: commentId,\n    });\n    return;\n  }\n\n  if (!isWebApp) actions.openChat({ id: TMP_CHAT_ID, tabId });\n\n  const chatByUsername = await fetchChatByUsername(global, username);\n\n  if (!chatByUsername) return;\n\n  if (isWebApp && chatByUsername) {\n    const theme = extractCurrentThemeParams();\n\n    actions.requestAppWebView({\n      appName: webAppName,\n      botId: chatByUsername.id,\n      tabId,\n      startApp,\n      mode,\n      theme,\n    });\n    return;\n  }\n\n  if (!messageId) return;\n\n  actions.openThread({\n    isComments: true,\n    originChannelId: chatByUsername.id,\n    originMessageId: messageId,\n    tabId,\n    focusMessageId: commentId,\n  });\n  if (onChatChanged) {\n    // @ts-ignore\n    actions[onChatChanged.action](onChatChanged.payload);\n  }\n});\n\naddActionHandler('openPrivateChannel', (global, actions, payload): ActionReturnType => {\n  const {\n    id, commentId, messageId, threadId, tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, id);\n  if (!chat) {\n    actions.showNotification({\n      message: {\n        key: 'PrivateChannelInaccessible',\n      },\n      tabId,\n    });\n    return;\n  }\n\n  if (!commentId && !messageId && !threadId) {\n    actions.openChat({ id, tabId });\n    return;\n  }\n\n  if (commentId && messageId) {\n    actions.openThread({\n      isComments: true,\n      originChannelId: chat.id,\n      originMessageId: messageId,\n      tabId,\n      focusMessageId: commentId,\n    });\n    return;\n  }\n\n  openChatWithParams(global, actions, chat, {\n    messageId,\n    threadId,\n  }, tabId);\n});\n\naddActionHandler('togglePreHistoryHidden', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, isEnabled,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n  if (!chat) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateChatFullInfo(global, chat.id, { isPreHistoryHidden: isEnabled });\n  setGlobal(global);\n\n  void callApi('togglePreHistoryHidden', { chat, isEnabled });\n});\n\naddActionHandler('updateChatDefaultBannedRights', (global, actions, payload): ActionReturnType => {\n  const { chatId, bannedRights } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  void callApi('updateChatDefaultBannedRights', { chat, bannedRights });\n});\n\naddActionHandler('updateChatMemberBannedRights', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, userId, bannedRights,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const user = selectUser(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n\n  if (!chat) return;\n\n  await callApi('updateChatMemberBannedRights', { chat, user, bannedRights });\n\n  global = getGlobal();\n\n  const updatedFullInfo = selectChatFullInfo(global, chat.id);\n  if (!updatedFullInfo) {\n    return;\n  }\n\n  const { members, kickedMembers } = updatedFullInfo;\n\n  const isBanned = Boolean(bannedRights.viewMessages);\n  const isUnblocked = !Object.keys(bannedRights).length;\n\n  global = updateChatFullInfo(global, chat.id, {\n    ...(members && isBanned && {\n      members: members.filter((m) => m.userId !== userId),\n    }),\n    ...(members && !isBanned && {\n      members: members.map((m) => (\n        m.userId === userId\n          ? { ...m, bannedRights }\n          : m\n      )),\n    }),\n    ...(isUnblocked && kickedMembers && {\n      kickedMembers: kickedMembers.filter((m) => m.userId !== userId),\n    }),\n  });\n  setGlobal(global);\n});\n\naddActionHandler('updateChatAdmin', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, userId, adminRights, customTitle,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const user = selectUser(global, userId);\n  if (!user) {\n    return;\n  }\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n\n  if (!chat) return;\n\n  await callApi('updateChatAdmin', {\n    chat, user, adminRights, customTitle,\n  });\n\n  const chatAfterUpdate = await callApi('fetchFullChat', chat);\n  if (!chatAfterUpdate?.fullInfo) {\n    return;\n  }\n\n  const { adminMembersById } = chatAfterUpdate.fullInfo;\n  const isDismissed = !Object.keys(adminRights).length;\n  let newAdminMembersById: Record<string, ApiChatMember> | undefined;\n  if (adminMembersById) {\n    if (isDismissed) {\n      const { [userId]: remove, ...rest } = adminMembersById;\n      newAdminMembersById = rest;\n    } else {\n      newAdminMembersById = {\n        ...adminMembersById,\n        [userId]: {\n          ...adminMembersById[userId],\n          adminRights,\n          customTitle,\n        },\n      };\n    }\n  }\n\n  if (newAdminMembersById) {\n    global = getGlobal();\n    global = updateChatFullInfo(global, chat.id, { adminMembersById: newAdminMembersById });\n    setGlobal(global);\n  }\n});\n\naddActionHandler('updateChat', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, title, about, photo, tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.InProgress, tabId);\n  setGlobal(global);\n\n  await Promise.all([\n    chat.title !== title\n      ? callApi('updateChatTitle', chat, title)\n      : undefined,\n    fullInfo?.about !== about\n      ? callApi('updateChatAbout', chat, about)\n      : undefined,\n    photo\n      ? callApi('editChatPhoto', { chatId, accessHash: chat.accessHash, photo })\n      : undefined,\n  ]);\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.Complete, tabId);\n  setGlobal(global);\n\n  if (photo) {\n    actions.loadFullChat({ chatId, withPhotos: true });\n  }\n});\n\naddActionHandler('updateChatPhoto', async (global, actions, payload): Promise<void> => {\n  const { photo, chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  await callApi('editChatPhoto', {\n    chatId,\n    accessHash: chat.accessHash,\n    photo,\n  });\n  actions.loadFullChat({ chatId, withPhotos: true });\n});\n\naddActionHandler('deleteChatPhoto', async (global, actions, payload): Promise<void> => {\n  const { photo, chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  let isDeleted;\n  if (photo.id === chat.avatarPhotoId) {\n    isDeleted = await callApi('editChatPhoto', {\n      chatId,\n      accessHash: chat.accessHash,\n    });\n  } else {\n    isDeleted = await callApi('deleteProfilePhotos', [photo]);\n  }\n  if (!isDeleted) return;\n\n  global = getGlobal();\n  global = deletePeerPhoto(global, chatId, photo.id);\n  setGlobal(global);\n\n  actions.loadFullChat({ chatId, withPhotos: true });\n});\n\naddActionHandler('toggleSignatures', (global, actions, payload): ActionReturnType => {\n  const { chatId, areProfilesEnabled, areSignaturesEnabled } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  void callApi('toggleSignatures', { chat, areProfilesEnabled, areSignaturesEnabled });\n});\n\naddActionHandler('loadGroupsForDiscussion', async (global): Promise<void> => {\n  const groups = await callApi('fetchGroupsForDiscussion');\n  if (!groups) {\n    return;\n  }\n\n  const addedById = groups.reduce((result, group) => {\n    if (group && !group.isForum) {\n      result[group.id] = group;\n    }\n\n    return result;\n  }, {} as Record<string, ApiChat>);\n\n  global = getGlobal();\n  global = {\n    ...global,\n    chats: {\n      ...global.chats,\n      forDiscussionIds: Object.keys(addedById),\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('linkDiscussionGroup', async (global, actions, payload): Promise<void> => {\n  const { channelId, chatId, tabId = getCurrentTabId() } = payload || {};\n\n  const channel = selectChat(global, channelId);\n  if (!channel) {\n    return;\n  }\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n\n  if (!chat) return;\n\n  let fullInfo = selectChatFullInfo(global, chat.id);\n  if (!fullInfo) {\n    const fullChat = await callApi('fetchFullChat', chat);\n    if (!fullChat) {\n      return;\n    }\n\n    fullInfo = fullChat.fullInfo;\n  }\n\n  if (fullInfo!.isPreHistoryHidden) {\n    global = getGlobal();\n    global = updateChatFullInfo(global, chat.id, { isPreHistoryHidden: false });\n    setGlobal(global);\n\n    await callApi('togglePreHistoryHidden', { chat, isEnabled: false });\n  }\n\n  void callApi('setDiscussionGroup', { channel, chat });\n});\n\naddActionHandler('unlinkDiscussionGroup', async (global, actions, payload): Promise<void> => {\n  const { channelId } = payload;\n\n  const channel = selectChat(global, channelId);\n  if (!channel) {\n    return;\n  }\n\n  const fullInfo = selectChatFullInfo(global, channelId);\n  let chat: ApiChat | undefined;\n  if (fullInfo?.linkedChatId) {\n    chat = selectChat(global, fullInfo.linkedChatId);\n  }\n\n  await callApi('setDiscussionGroup', { channel });\n  if (chat) {\n    global = getGlobal();\n    loadFullChat(global, actions, chat);\n  }\n});\n\naddActionHandler('setActiveChatFolder', (global, actions, payload): ActionReturnType => {\n  const { activeChatFolder, tabId = getCurrentTabId() } = payload;\n  const maxFolders = selectCurrentLimit(global, 'dialogFilters');\n\n  const isBlocked = activeChatFolder + 1 > maxFolders;\n\n  if (isBlocked) {\n    actions.openLimitReachedModal({\n      limit: 'dialogFilters',\n      tabId,\n    });\n    return undefined;\n  }\n\n  return updateTabState(global, {\n    activeChatFolder,\n  }, tabId);\n});\n\naddActionHandler('resetOpenChatWithDraft', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    requestedDraft: undefined,\n  }, tabId);\n});\n\naddActionHandler('loadMoreMembers', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { chatId } = selectCurrentMessageList(global, tabId) || {};\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  if (!chat || isChatBasicGroup(chat)) {\n    return;\n  }\n\n  const offset = selectChatFullInfo(global, chat.id)?.members?.length;\n  if (offset !== undefined && chat.membersCount !== undefined && offset >= chat.membersCount) return;\n\n  const result = await callApi('fetchMembers', { chat, offset });\n  if (!result) {\n    return;\n  }\n\n  const { members, userStatusesById } = result;\n  if (!members || !members.length) {\n    return;\n  }\n\n  global = getGlobal();\n  global = addUserStatuses(global, userStatusesById);\n  global = addChatMembers(global, chat, members);\n  setGlobal(global);\n});\n\naddActionHandler('addChatMembers', async (global, actions, payload): Promise<void> => {\n  const { chatId, memberIds, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  const users = memberIds.map((userId) => selectUser(global, userId)).filter(Boolean);\n\n  if (!chat || !users.length) {\n    return;\n  }\n\n  actions.setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.Loading, tabId });\n  const missingUsers = await callApi('addChatMembers', chat, users);\n  if (missingUsers) {\n    global = getGlobal();\n    global = updateMissingInvitedUsers(global, chatId, missingUsers, tabId);\n    setGlobal(global);\n  }\n  actions.setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.Closed, tabId });\n  global = getGlobal();\n  loadFullChat(global, actions, chat);\n});\n\naddActionHandler('deleteChatMember', async (global, actions, payload): Promise<void> => {\n  const { chatId, userId } = payload;\n  const chat = selectChat(global, chatId);\n  const user = selectUser(global, userId);\n\n  if (!chat || !user) {\n    return;\n  }\n\n  await callApi('deleteChatMember', chat, user);\n  global = getGlobal();\n  loadFullChat(global, actions, chat);\n});\n\naddActionHandler('toggleIsProtected', (global, actions, payload): ActionReturnType => {\n  const { chatId, isProtected } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  void callApi('toggleIsProtected', { chat, isProtected });\n});\n\naddActionHandler('setChatEnabledReactions', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, enabledReactions, reactionsLimit,\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  await callApi('setChatEnabledReactions', {\n    chat,\n    enabledReactions,\n    reactionsLimit,\n  });\n\n  global = getGlobal();\n  void loadFullChat(global, actions, chat);\n});\n\naddActionHandler('fetchChat', (global, actions, payload): ActionReturnType => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (chat) {\n    return;\n  }\n\n  if (selectIsChatWithSelf(global, chatId)) {\n    void callApi('fetchChat', { type: 'self' });\n  } else {\n    const user = selectUser(global, chatId);\n    if (user) {\n      void callApi('fetchChat', { type: 'user', user });\n    }\n  }\n});\n\naddActionHandler('loadChatSettings', async (global, actions, payload): Promise<void> => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('fetchChatSettings', chat);\n  if (!result) return;\n\n  const { settings } = result;\n\n  global = getGlobal();\n  global = updateChat(global, chat.id, { settings });\n  setGlobal(global);\n});\n\naddActionHandler('toggleJoinToSend', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n  if (!isChatSuperGroup(chat) && !isChatChannel(chat)) return;\n\n  await callApi('toggleJoinToSend', chat, isEnabled);\n});\n\naddActionHandler('toggleJoinRequest', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n  if (!isChatSuperGroup(chat) && !isChatChannel(chat)) return;\n\n  await callApi('toggleJoinRequest', chat, isEnabled);\n});\n\naddActionHandler('openForumPanel', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  actions.toggleStoryRibbon({ isShown: false, tabId });\n  actions.toggleStoryRibbon({ isShown: false, isArchived: true, tabId });\n  return updateTabState(global, {\n    forumPanelChatId: chatId,\n  }, tabId);\n});\n\naddActionHandler('closeForumPanel', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    forumPanelChatId: undefined,\n  }, tabId);\n});\n\naddActionHandler('processAttachBotParameters', async (global, actions, payload): Promise<void> => {\n  const {\n    username, filter, startParam, tabId = getCurrentTabId(),\n  } = payload;\n  const bot = await getAttachBotOrNotify(global, actions, username, tabId);\n  if (!bot) return;\n\n  const isForChat = Boolean(filter);\n\n  if (!isForChat) {\n    actions.callAttachBot({\n      isFromSideMenu: true,\n      bot,\n      startParam,\n      tabId,\n    });\n    return;\n  }\n\n  global = getGlobal();\n  const { attachMenu: { bots } } = global;\n  if (!bots[bot.id]) {\n    global = updateTabState(global, {\n      requestedAttachBotInstall: {\n        bot,\n        onConfirm: {\n          action: 'requestAttachBotInChat',\n          payload: {\n            bot,\n            filter,\n            startParam,\n          },\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n  actions.requestAttachBotInChat({\n    bot,\n    filter,\n    startParam,\n    tabId,\n  });\n});\n\naddActionHandler('loadTopics', async (global, actions, payload): Promise<void> => {\n  const { chatId, force } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const topicsInfo = selectTopicsInfo(global, chatId);\n\n  if (!force && topicsInfo?.listedTopicIds && topicsInfo.listedTopicIds.length === topicsInfo.totalCount) {\n    return;\n  }\n\n  const offsetTopic = !force ? topicsInfo?.listedTopicIds?.reduce((acc, el) => {\n    const topic = selectTopic(global, chatId, el);\n    const accTopic = selectTopic(global, chatId, acc);\n    if (!topic) return acc;\n    if (!accTopic || topic.lastMessageId < accTopic.lastMessageId) {\n      return el;\n    }\n    return acc;\n  }) : undefined;\n\n  const { id: offsetTopicId, date: offsetDate, lastMessageId: offsetId } = (offsetTopic\n    && selectTopic(global, chatId, offsetTopic)) || {};\n  const result = await callApi('fetchTopics', {\n    chat, offsetTopicId, offsetId, offsetDate, limit: offsetTopicId ? TOPICS_SLICE : TOPICS_SLICE_SECOND_LOAD,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = addMessages(global, result.messages);\n  global = updateTopics(global, chatId, result.count, result.topics);\n  global = updateListedTopicIds(global, chatId, result.topics.map((topic) => topic.id));\n  Object.entries(result.draftsById || {}).forEach(([threadId, draft]) => {\n    global = replaceThreadParam(global, chatId, Number(threadId), 'draft', draft);\n  });\n  Object.entries(result.readInboxMessageIdByTopicId || {}).forEach(([topicId, messageId]) => {\n    global = updateThreadInfo(global, chatId, Number(topicId), { lastReadInboxMessageId: messageId });\n  });\n\n  setGlobal(global);\n});\n\naddActionHandler('loadTopicById', async (global, actions, payload): Promise<void> => {\n  const { chatId, topicId } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('fetchTopicById', { chat, topicId });\n\n  if (!result) {\n    if ('tabId' in payload && payload.shouldCloseChatOnError) {\n      const { tabId = getCurrentTabId() } = payload;\n      actions.openChat({ id: undefined, tabId });\n    }\n    return;\n  }\n\n  global = getGlobal();\n  global = addMessages(global, result.messages);\n  global = updateTopic(global, chatId, topicId, result.topic);\n\n  setGlobal(global);\n});\n\naddActionHandler('toggleForum', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled, tabId = getCurrentTabId() } = payload;\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n  if (!chat) {\n    return;\n  }\n\n  let result: true | undefined;\n  try {\n    result = await callApi('toggleForum', { chat, isEnabled });\n  } catch (error) {\n    if ((error as ApiError).message === 'FLOOD') {\n      actions.showNotification({ message: langProvider.oldTranslate('FloodWait'), tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n\n  if (result) {\n    global = getGlobal();\n    global = updateChat(global, chat.id, { isForum: isEnabled });\n    setGlobal(global);\n\n    if (!isEnabled) {\n      actions.closeForumPanel({ tabId });\n    } else {\n      actions.openForumPanel({ chatId: chat.id, tabId });\n    }\n  }\n});\n\naddActionHandler('toggleParticipantsHidden', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const prevIsEnabled = selectChatFullInfo(global, chat.id)?.areParticipantsHidden;\n  global = updateChatFullInfo(global, chatId, { areParticipantsHidden: isEnabled });\n  setGlobal(global);\n\n  const result = await callApi('toggleParticipantsHidden', { chat, isEnabled });\n\n  if (!result && prevIsEnabled !== undefined) {\n    global = getGlobal();\n    global = updateChatFullInfo(global, chatId, { areParticipantsHidden: prevIsEnabled });\n    setGlobal(global);\n  }\n});\n\naddActionHandler('createTopic', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, title, iconColor, iconEmojiId,\n    tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  if (selectTabState(global, tabId).createTopicPanel) {\n    global = updateTabState(global, {\n      createTopicPanel: {\n        chatId,\n        isLoading: true,\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n\n  const topicId = await callApi('createTopic', {\n    chat, title, iconColor, iconEmojiId,\n  });\n  if (topicId) {\n    actions.openThread({\n      chatId, threadId: topicId, shouldReplaceHistory: true, tabId,\n    });\n  }\n  actions.closeCreateTopicPanel({ tabId });\n});\n\naddActionHandler('deleteTopic', async (global, actions, payload): Promise<void> => {\n  const { chatId, topicId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  await callApi('deleteTopic', { chat, topicId });\n\n  global = getGlobal();\n  global = deleteTopic(global, chatId, topicId);\n  setGlobal(global);\n});\n\naddActionHandler('editTopic', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, topicId, tabId = getCurrentTabId(), ...rest\n  } = payload;\n  const chat = selectChat(global, chatId);\n  const topic = selectTopic(global, chatId, topicId);\n  if (!chat || !topic) return;\n\n  if (selectTabState(global, tabId).editTopicPanel) {\n    global = updateTabState(global, {\n      editTopicPanel: {\n        chatId,\n        topicId,\n        isLoading: true,\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n\n  const result = await callApi('editTopic', { chat, topicId, ...rest });\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateTopic(global, chatId, topicId, rest);\n  setGlobal(global);\n\n  actions.closeEditTopicPanel({ tabId });\n});\n\naddActionHandler('toggleTopicPinned', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, topicId, isPinned, tabId = getCurrentTabId(),\n  } = payload;\n\n  const { topicsPinnedLimit } = global.appConfig || {};\n  const chat = selectChat(global, chatId);\n  const topics = selectTopics(global, chatId);\n  if (!chat || !topics || !topicsPinnedLimit) return;\n\n  if (isPinned && Object.values(topics).filter((topic) => topic.isPinned).length >= topicsPinnedLimit) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('LimitReachedPinnedTopics', topicsPinnedLimit, 'i'),\n      tabId,\n    });\n    return;\n  }\n\n  void callApi('togglePinnedTopic', { chat, topicId, isPinned });\n});\n\naddActionHandler('checkChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { slug, tabId = getCurrentTabId() } = payload;\n\n  const result = await callApi('checkChatlistInvite', { slug });\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('lng_group_invite_bad_link'),\n      tabId,\n    });\n    return;\n  }\n\n  global = getGlobal();\n\n  global = updateTabState(global, {\n    chatlistModal: {\n      invite: result.invite,\n    },\n  }, tabId);\n\n  setGlobal(global);\n});\n\naddActionHandler('joinChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { invite, peerIds, tabId = getCurrentTabId() } = payload;\n\n  const peers = peerIds.map((peerId) => selectChat(global, peerId)).filter(Boolean);\n  const currentNotJoinedCount = peers.filter((peer) => peer.isNotJoined).length;\n\n  const existingFolder = 'folderId' in invite ? selectChatFolder(global, invite.folderId) : undefined;\n  const folderTitle = ('title' in invite ? invite.title : existingFolder?.title)!;\n\n  try {\n    const result = await callApi('joinChatlistInvite', { slug: invite.slug, peers });\n    if (!result) return;\n\n    if (existingFolder) {\n      actions.showNotification({\n        title: {\n          key: 'FolderLinkNotificationUpdatedTitle',\n          variables: {\n            title: folderTitle.text,\n          },\n        },\n        message: {\n          key: 'FolderLinkNotificationUpdatedSubtitle',\n          variables: {\n            count: currentNotJoinedCount,\n          },\n          options: {\n            pluralValue: currentNotJoinedCount,\n          },\n        },\n        tabId,\n      });\n\n      return;\n    }\n\n    actions.showNotification({\n      title: {\n        key: 'FolderLinkNotificationAddedTitle',\n        variables: {\n          title: folderTitle.text,\n        },\n      },\n      message: {\n        key: 'FolderLinkNotificationAddedSubtitle',\n        variables: {\n          count: currentNotJoinedCount,\n        },\n        options: {\n          pluralValue: currentNotJoinedCount,\n        },\n      },\n      tabId,\n    });\n  } catch (error) {\n    if ((error as ApiError).message === 'CHATLISTS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'chatlistJoined', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n});\n\naddActionHandler('leaveChatlist', async (global, actions, payload): Promise<void> => {\n  const { folderId, peerIds, tabId = getCurrentTabId() } = payload;\n\n  const folder = selectChatFolder(global, folderId);\n\n  const peers = peerIds?.map((peerId) => selectChat(global, peerId)).filter(Boolean) || [];\n\n  const result = await callApi('leaveChatlist', { folderId, peers });\n\n  if (!result) return;\n  if (!folder) return;\n\n  actions.showNotification({\n    title: {\n      key: 'FolderLinkNotificationDeletedTitle',\n      variables: {\n        title: folder.title.text,\n      },\n    },\n    message: {\n      key: 'FolderLinkNotificationDeletedSubtitle',\n      variables: {\n        count: peers.length,\n      },\n      options: {\n        pluralValue: peers.length,\n      },\n    },\n    tabId,\n  });\n});\n\naddActionHandler('loadChatlistInvites', async (global, actions, payload): Promise<void> => {\n  const { folderId } = payload;\n\n  const result = await callApi('fetchChatlistInvites', { folderId });\n\n  if (!result) return;\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    chatFolders: {\n      ...global.chatFolders,\n      invites: {\n        ...global.chatFolders.invites,\n        [folderId]: result.invites,\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('createChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { folderId, tabId = getCurrentTabId() } = payload;\n\n  const folder = selectChatFolder(global, folderId);\n  if (!folder) return;\n\n  global = updateTabState(global, {\n    shareFolderScreen: {\n      ...selectTabState(global, tabId).shareFolderScreen!,\n      isLoading: true,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  let result: { filter: ApiChatFolder; invite: ApiChatlistExportedInvite | undefined } | undefined;\n\n  try {\n    result = await callApi('createChalistInvite', {\n      folderId,\n      peers: folder.includedChatIds.concat(folder.pinnedChatIds || [])\n        .map((chatId) => selectChat(global, chatId) || selectUser(global, chatId)).filter(Boolean),\n    });\n  } catch (error) {\n    if (CHATLIST_LIMIT_ERROR_LIST.has((error as ApiError).message)) {\n      actions.openLimitReachedModal({ limit: 'chatlistInvites', tabId });\n      actions.requestNextSettingsScreen({ screen: SettingsScreens.Folders, tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n\n  if (!result || !result.invite) return;\n\n  const { shareFolderScreen } = selectTabState(global, tabId);\n\n  if (!shareFolderScreen) return;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    chatFolders: {\n      ...global.chatFolders,\n      byId: {\n        ...global.chatFolders.byId,\n        [folderId]: {\n          ...global.chatFolders.byId[folderId],\n          ...result.filter,\n        },\n      },\n      invites: {\n        ...global.chatFolders.invites,\n        [folderId]: [\n          ...(global.chatFolders.invites[folderId] || []),\n          result.invite,\n        ],\n      },\n    },\n  };\n  global = updateTabState(global, {\n    shareFolderScreen: {\n      ...shareFolderScreen,\n      url: result.invite.url,\n      isLoading: false,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('editChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const {\n    folderId, peerIds, url, tabId = getCurrentTabId(),\n  } = payload;\n\n  const slug = url.split('/').pop();\n  if (!slug) return;\n\n  const peers = peerIds\n    .map((chatId) => selectChat(global, chatId) || selectUser(global, chatId)).filter(Boolean);\n\n  global = updateTabState(global, {\n    shareFolderScreen: {\n      ...selectTabState(global, tabId).shareFolderScreen!,\n      isLoading: true,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  try {\n    const result = await callApi('editChatlistInvite', { folderId, slug, peers });\n\n    if (!result) {\n      return;\n    }\n\n    global = getGlobal();\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        invites: {\n          ...global.chatFolders.invites,\n          [folderId]: global.chatFolders.invites[folderId]?.map((invite) => {\n            if (invite.url === url) {\n              return result;\n            }\n            return invite;\n          }),\n        },\n      },\n    };\n    setGlobal(global);\n  } catch (error) {\n    actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n  } finally {\n    global = getGlobal();\n\n    global = updateTabState(global, {\n      shareFolderScreen: {\n        ...selectTabState(global, tabId).shareFolderScreen!,\n        isLoading: false,\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('deleteChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { folderId, url } = payload;\n\n  const slug = url.split('/').pop();\n\n  if (!slug) return;\n\n  const result = await callApi('deleteChatlistInvite', { folderId, slug });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    chatFolders: {\n      ...global.chatFolders,\n      invites: {\n        ...global.chatFolders.invites,\n        [folderId]: global.chatFolders.invites[folderId]?.filter((invite) => invite.url !== url),\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('openDeleteChatFolderModal', async (global, actions, payload): Promise<void> => {\n  const { folderId, isConfirmedForChatlist, tabId = getCurrentTabId() } = payload;\n  const folder = selectChatFolder(global, folderId);\n  if (!folder) return;\n\n  if (folder.isChatList && (!folder.hasMyInvites || isConfirmedForChatlist)) {\n    const currentIds = getOrderedIds(folderId);\n    const suggestions = await callApi('fetchLeaveChatlistSuggestions', { folderId });\n    global = getGlobal();\n    global = updateTabState(global, {\n      chatlistModal: {\n        removal: {\n          folderId,\n          suggestedPeerIds: unique([...(suggestions || []), ...(currentIds || [])]),\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = updateTabState(global, {\n    deleteFolderDialogModal: folderId,\n  }, tabId);\n\n  setGlobal(global);\n});\n\naddActionHandler('updateChatDetectedLanguage', (global, actions, payload): ActionReturnType => {\n  const { chatId, detectedLanguage } = payload;\n\n  global = getGlobal();\n  global = updateChat(global, chatId, {\n    detectedLanguage,\n  }, undefined, true);\n\n  return global;\n});\n\naddActionHandler('togglePeerTranslations', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('togglePeerTranslations', { chat, isEnabled });\n\n  if (result === undefined) return;\n\n  global = getGlobal();\n  global = updatePeerFullInfo(global, chatId, {\n    isTranslationDisabled: isEnabled ? undefined : true,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('setViewForumAsMessages', (global, actions, payload): ActionReturnType => {\n  const { chatId, isEnabled } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat?.isForum || chat.isForumAsMessages === isEnabled) {\n    return;\n  }\n\n  global = updateChat(global, chatId, { isForumAsMessages: isEnabled || undefined });\n  setGlobal(global);\n\n  void callApi('setViewForumAsMessages', { chat, isEnabled });\n});\n\naddActionHandler('loadChannelRecommendations', async (global, actions, payload): Promise<void> => {\n  const { chatId } = payload;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n\n  if (chatId && !chat) {\n    return;\n  }\n\n  if (!chatId) {\n    const similarChannelIds = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID);\n    if (similarChannelIds) return; // Already cached\n  }\n\n  const result = await callApi('fetchChannelRecommendations', {\n    chat,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const { similarChannels, count } = result;\n\n  const chatsById = buildCollectionByKey(similarChannels, 'id');\n\n  global = getGlobal();\n  global = replaceSimilarChannels(global, chatId || GLOBAL_SUGGESTED_CHANNELS_ID, Object.keys(chatsById), count);\n  setGlobal(global);\n});\n\naddActionHandler('loadBotRecommendations', async (global, actions, payload): Promise<void> => {\n  const { userId } = payload;\n  const user = selectChat(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  const result = await callApi('fetchBotsRecommendations', {\n    user,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const { similarBots, count } = result;\n\n  const users = buildCollectionByKey(similarBots, 'id');\n\n  global = getGlobal();\n  global = addUsers(global, users);\n  global = addSimilarBots(global, userId, Object.keys(users), count);\n  setGlobal(global);\n});\n\naddActionHandler('toggleChannelRecommendations', (global, actions, payload): ActionReturnType => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  global = toggleSimilarChannels(global, chatId);\n  setGlobal(global);\n});\n\naddActionHandler('resolveBusinessChatLink', async (global, actions, payload): Promise<void> => {\n  const { slug, tabId = getCurrentTabId() } = payload;\n  const result = await callApi('resolveBusinessChatLink', { slug });\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('BusinessLink.ErrorExpired'),\n      tabId,\n    });\n    return;\n  }\n\n  const { chatLink } = result;\n\n  actions.openChatWithDraft({\n    chatId: chatLink.chatId,\n    text: chatLink.text,\n    tabId,\n  });\n});\n\naddActionHandler('requestCollectibleInfo', async (global, actions, payload): Promise<void> => {\n  const {\n    type, collectible, peerId, tabId = getCurrentTabId(),\n  } = payload;\n\n  let inputCollectible;\n  if (type === 'phone') {\n    inputCollectible = { phone: collectible };\n  }\n  if (type === 'username') {\n    inputCollectible = { username: collectible };\n  }\n  if (!inputCollectible) return;\n\n  const result = await callApi('fetchCollectionInfo', inputCollectible);\n  if (!result) {\n    copyTextToClipboard(collectible);\n    return;\n  }\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    collectibleInfoModal: {\n      ...result,\n      type,\n      collectible,\n      peerId,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\nasync function loadChats(\n  listType: ChatListType,\n  isFullDraftSync?: boolean,\n  shouldIgnorePagination?: boolean,\n) {\n  // eslint-disable-next-line eslint-multitab-tt/no-immediate-global\n  let global = getGlobal();\n  let lastLocalServiceMessageId = selectLastServiceNotification(global)?.id;\n\n  const params = !shouldIgnorePagination ? selectChatListLoadingParameters(global, listType) : {};\n  const offsetPeer = params.nextOffsetPeerId ? selectPeer(global, params.nextOffsetPeerId) : undefined;\n  const offsetDate = params.nextOffsetDate;\n  const offsetId = params.nextOffsetId;\n\n  const isFirstBatch = !shouldIgnorePagination && !offsetPeer && !offsetDate && !offsetId;\n\n  const result = listType === 'saved' ? await callApi('fetchSavedChats', {\n    limit: CHAT_LIST_LOAD_SLICE,\n    offsetDate,\n    offsetId,\n    offsetPeer,\n    withPinned: isFirstBatch,\n  }) : await callApi('fetchChats', {\n    limit: CHAT_LIST_LOAD_SLICE,\n    offsetDate,\n    offsetId,\n    offsetPeer,\n    archived: listType === 'archived',\n    withPinned: isFirstBatch,\n    lastLocalServiceMessageId,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const { chatIds } = result;\n\n  global = getGlobal();\n  lastLocalServiceMessageId = selectLastServiceNotification(global)?.id;\n\n  const newChats = buildCollectionByKey(result.chats, 'id');\n\n  global = updateUsers(global, buildCollectionByKey(result.users, 'id'));\n  global = updateChats(global, newChats);\n  if (isFirstBatch) {\n    global = replaceChatListIds(global, listType, chatIds);\n    global = replaceUserStatuses(global, result.userStatusesById);\n  } else {\n    global = addChatListIds(global, listType, chatIds);\n    global = addUserStatuses(global, result.userStatusesById);\n  }\n\n  global = updateChatListSecondaryInfo(global, listType, result);\n  global = replaceMessages(global, result.messages);\n  global = updateChatsLastMessageId(global, result.lastMessageByChatId, listType);\n\n  if (!shouldIgnorePagination) {\n    global = replaceChatListLoadingParameters(\n      global, listType, result.nextOffsetId, result.nextOffsetPeerId, result.nextOffsetDate,\n    );\n  }\n\n  const idsToUpdateDraft = isFullDraftSync ? result.chatIds : Object.keys(result.draftsById);\n  idsToUpdateDraft.forEach((chatId) => {\n    const draft = result.draftsById[chatId];\n    const thread = selectThread(global, chatId, MAIN_THREAD_ID);\n\n    if (!draft && !thread) return;\n\n    if (!selectDraft(global, chatId, MAIN_THREAD_ID)?.isLocal) {\n      global = replaceThreadParam(\n        global, chatId, MAIN_THREAD_ID, 'draft', draft,\n      );\n    }\n  });\n\n  if ((chatIds.length === 0 || chatIds.length === result.totalChatCount) && !global.chats.isFullyLoaded[listType]) {\n    global = {\n      ...global,\n      chats: {\n        ...global.chats,\n        isFullyLoaded: {\n          ...global.chats.isFullyLoaded,\n          [listType]: true,\n        },\n      },\n    };\n  }\n\n  setGlobal(global);\n}\n\nexport async function loadFullChat<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, chat: ApiChat,\n) {\n  const result = await callApi('fetchFullChat', chat);\n  if (!result) {\n    return undefined;\n  }\n\n  const {\n    chats, userStatusesById, fullInfo, groupCall, membersCount, isForumAsMessages,\n  } = result;\n\n  global = getGlobal();\n  global = updateChats(global, buildCollectionByKey(chats, 'id'));\n\n  if (userStatusesById) {\n    global = addUserStatuses(global, userStatusesById);\n  }\n\n  if (groupCall) {\n    const existingGroupCall = selectGroupCall(global, groupCall.id!);\n    global = updateGroupCall(\n      global,\n      groupCall.id!,\n      omit(groupCall, ['connectionState', 'isLoaded']),\n      undefined,\n      existingGroupCall ? undefined : groupCall.participantsCount,\n    );\n  }\n\n  if (membersCount !== undefined) {\n    global = updateChat(global, chat.id, { membersCount });\n  }\n  if (chat.isForum) {\n    global = updateChat(global, chat.id, { isForumAsMessages });\n  }\n  global = replaceChatFullInfo(global, chat.id, fullInfo);\n  setGlobal(global);\n\n  const stickerSet = fullInfo.stickerSet;\n  const localSet = stickerSet && selectStickerSet(global, stickerSet);\n  if (stickerSet && !localSet) {\n    actions.loadStickers({\n      stickerSetInfo: {\n        id: stickerSet.id,\n        accessHash: stickerSet.accessHash,\n      },\n    });\n  }\n\n  const emojiSet = fullInfo.emojiSet;\n  const localEmojiSet = emojiSet && selectStickerSet(global, emojiSet);\n  if (emojiSet && !localEmojiSet) {\n    actions.loadStickers({\n      stickerSetInfo: {\n        id: emojiSet.id,\n        accessHash: emojiSet.accessHash,\n      },\n    });\n  }\n\n  return result;\n}\n\nexport async function migrateChat<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, chat: ApiChat,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): Promise<ApiChat | undefined> {\n  try {\n    const supergroup = await callApi('migrateChat', chat);\n\n    return supergroup;\n  } catch (error) {\n    if ((error as ApiError).message === 'CHANNELS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'channels', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n\n    return undefined;\n  }\n}\n\nexport async function fetchChatByUsername<T extends GlobalState>(\n  global: T,\n  username: string,\n  referrer?: string,\n) {\n  global = getGlobal();\n  const localChat = !referrer ? selectChatByUsername(global, username) : undefined;\n  if (localChat && !localChat.isMin) {\n    return localChat;\n  }\n\n  const { chat, user } = await callApi('getChatByUsername', username, referrer) || {};\n  if (!chat) {\n    return undefined;\n  }\n\n  global = getGlobal();\n  global = updateChat(global, chat.id, chat);\n  if (user) {\n    global = updateUser(global, user.id, user);\n  }\n\n  setGlobal(global);\n\n  return chat;\n}\n\nexport async function checkWebAppExists<T extends GlobalState>(\n  global: T, botName: string, appName: string,\n) {\n  if (!botName || !appName) return false;\n  global = getGlobal();\n  const chatByUsername = await fetchChatByUsername(global, botName);\n  global = getGlobal();\n  const bot = chatByUsername && selectUser(global, chatByUsername.id);\n  const botApp = bot && await callApi('fetchBotApp', {\n    bot,\n    appName,\n  });\n  return Boolean(botApp);\n}\n\nexport async function fetchChatByPhoneNumber<T extends GlobalState>(global: T, phoneNumber: string) {\n  global = getGlobal();\n  const localUser = selectUserByPhoneNumber(global, phoneNumber);\n  if (localUser && !localUser.isMin) {\n    return selectChat(global, localUser.id);\n  }\n\n  const { chat, user } = await callApi('getChatByPhoneNumber', phoneNumber) || {};\n  if (!chat) {\n    return undefined;\n  }\n\n  global = getGlobal();\n  global = updateChat(global, chat.id, chat);\n\n  if (user) {\n    global = updateUser(global, user.id, user);\n  }\n  setGlobal(global);\n\n  return chat;\n}\n\nasync function getAttachBotOrNotify<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, username: string,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const chat = await fetchChatByUsername(global, username);\n  if (!chat) return undefined;\n\n  global = getGlobal();\n  const user = selectUser(global, chat.id);\n  if (!user) return undefined;\n\n  const isBot = isUserBot(user);\n  if (!isBot) return undefined;\n  const result = await callApi('loadAttachBot', {\n    bot: user,\n  });\n\n  global = getGlobal();\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('WebApp.AddToAttachmentUnavailableError'),\n      tabId,\n    });\n\n    return undefined;\n  }\n  setGlobal(global);\n\n  return result.bot;\n}\n\nasync function openChatByUsername<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  params: {\n    username: string;\n    threadId?: ThreadId;\n    channelPostId?: number;\n    startParam?: string;\n    ref?: string;\n    startAttach?: string;\n    attach?: string;\n    text?: string;\n  },\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const {\n    username, threadId, channelPostId, startParam, ref, startAttach, attach, text,\n  } = params;\n  const currentChat = selectCurrentChat(global, tabId);\n\n  // Attach in the current chat\n  if (startAttach !== undefined && !attach) {\n    const bot = await getAttachBotOrNotify(global, actions, username, tabId);\n\n    if (!bot) return;\n\n    actions.callAttachBot({\n      bot,\n      chatId: currentChat?.id || bot.id,\n      startParam: startAttach,\n      tabId,\n    });\n\n    return;\n  }\n\n  const isCurrentChat = currentChat?.usernames?.some((c) => c.username === username);\n\n  if (!isCurrentChat) {\n    // Open temporary empty chat to make the click response feel faster\n    actions.openChat({ id: TMP_CHAT_ID, tabId });\n  }\n\n  const starRefStartPrefixes = global.appConfig?.starRefStartPrefixes;\n  let referrer = ref;\n  if (startParam && starRefStartPrefixes?.length) {\n    const prefix = starRefStartPrefixes.find((p) => startParam.startsWith(p));\n    if (prefix) {\n      referrer = startParam.slice(prefix.length);\n    }\n  }\n\n  const chat = await fetchChatByUsername(global, username, referrer);\n  if (!chat) {\n    if (!isCurrentChat) {\n      actions.openPreviousChat({ tabId });\n      actions.showNotification({ message: 'User does not exist', tabId });\n    }\n\n    return;\n  }\n\n  openChatWithParams(global, actions, chat, {\n    isCurrentChat,\n    threadId,\n    messageId: channelPostId,\n    startParam,\n    referrer,\n    startAttach,\n    attach,\n    text,\n  }, tabId);\n}\n\nasync function openChatWithParams<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  chat: ApiChat,\n  params: {\n    isCurrentChat?: boolean;\n    threadId?: ThreadId;\n    messageId?: number;\n    startParam?: string;\n    referrer?: string;\n    startAttach?: string;\n    attach?: string;\n    text?: string;\n  },\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const {\n    isCurrentChat, threadId, messageId, startParam, referrer, startAttach, attach, text,\n  } = params;\n\n  if (messageId) {\n    let isTopicProcessed = false;\n    // In forums, link to a topic start message should open the topic\n    if (chat.isForum && !threadId) {\n      let topic = selectTopics(global, chat.id)?.[messageId];\n      if (!topic) {\n        const topicResult = await callApi('fetchTopicById', { chat, topicId: messageId });\n        topic = topicResult?.topic;\n      }\n\n      if (topic) {\n        actions.openThread({\n          chatId: chat.id, threadId: topic.id, tabId,\n        });\n        isTopicProcessed = true;\n      }\n    }\n\n    if (!isTopicProcessed) {\n      actions.focusMessage({\n        chatId: chat.id, threadId, messageId, tabId,\n      });\n    }\n  } else if (!isCurrentChat) {\n    actions.openThread({ chatId: chat.id, threadId: threadId ?? MAIN_THREAD_ID, tabId });\n  }\n\n  if (startParam && !referrer) {\n    actions.startBot({ botId: chat.id, param: startParam });\n  }\n\n  if (attach) {\n    global = getGlobal();\n    openAttachMenuFromLink(global, actions, chat.id, attach, startAttach, tabId);\n  }\n\n  if (text) {\n    actions.openChatWithDraft({ chatId: chat.id, text: { text }, tabId });\n  }\n}\n\nasync function openAttachMenuFromLink<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  chatId: string,\n  attach: string,\n  startAttach?: string | boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  global = getGlobal();\n  const bot = await getAttachBotOrNotify(global, actions, attach, tabId);\n  if (!bot) return;\n\n  actions.callAttachBot({\n    bot,\n    chatId,\n    ...(typeof startAttach === 'string' && { startParam: startAttach }),\n    tabId,\n  });\n}\n\nexport async function ensureIsSuperGroup<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  chatId: string,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const chat = selectChat(global, chatId);\n  if (!chat || !isChatBasicGroup(chat)) {\n    return chat;\n  }\n\n  const newChat = await migrateChat(global, actions, chat, tabId);\n  if (!newChat) {\n    return undefined;\n  }\n\n  actions.loadFullChat({ chatId: newChat.id });\n  actions.openChat({ id: newChat.id, tabId });\n\n  return newChat;\n}\n","import type { ApiGroupCall } from '../../../api/types';\nimport type { CallSound } from '../../../types';\nimport type { RequiredGlobalActions } from '../../index';\nimport type {\n  ActionReturnType, GlobalState, TabArgs,\n} from '../../types';\n\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport safePlay from '../../../util/safePlay';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/windowEnvironment';\nimport { callApi } from '../../../api/gramjs';\nimport { getMainUsername } from '../../helpers';\nimport {\n  addActionHandler, getGlobal,\n  setGlobal,\n} from '../../index';\nimport { updateGroupCall } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat, selectChatFullInfo, selectTabState, selectUser,\n} from '../../selectors';\nimport { selectActiveGroupCall, selectChatGroupCall, selectGroupCall } from '../../selectors/calls';\nimport { fetchChatByUsername, loadFullChat } from '../api/chats';\n\n// This is a tiny MP3 file that is silent - retrieved from https://bigsoundbank.com and then modified\n// eslint-disable-next-line max-len\nconst silentSound = 'data:audio/mpeg;base64,SUQzBAAAAAABEVRYWFgAAAAtAAADY29tbWVudABCaWdTb3VuZEJhbmsuY29tIC8gTGFTb25vdGhlcXVlLm9yZwBURU5DAAAAHQAAA1N3aXRjaCBQbHVzIMKpIE5DSCBTb2Z0d2FyZQBUSVQyAAAABgAAAzIyMzUAVFNTRQAAAA8AAANMYXZmNTcuODMuMTAwAAAAAAAAAAAAAAD/80DEAAAAA0gAAAAATEFNRTMuMTAwVVVVVVVVVVVVVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQsRbAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQMSkAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV';\n\nlet audioElement: HTMLAudioElement | undefined;\nlet audioContext: AudioContext | undefined;\nlet sounds: Record<CallSound, HTMLAudioElement>;\n\n// Workaround: this function is called once on the first user interaction.\n// After that, it will be possible to play the notification on iOS without problems.\n// https://rosswintle.uk/2019/01/skirting-the-ios-safari-audio-auto-play-policy-for-ui-sound-effects/\nexport function initializeSoundsForSafari() {\n  initializeSounds();\n\n  return Promise.all(Object.values(sounds).map((sound) => {\n    const prevSrc = sound.src;\n    sound.src = silentSound;\n    sound.muted = true;\n    sound.volume = 0.0001;\n    return sound.play()\n      .then(() => {\n        sound.pause();\n        sound.volume = 1;\n        sound.currentTime = 0;\n        sound.muted = false;\n\n        requestNextMutation(() => {\n          sound.src = prevSrc;\n        });\n      });\n  }));\n}\n\nexport function initializeSounds() {\n  if (sounds) {\n    return;\n  }\n  const joinAudio = new Audio('./voicechat_join.mp3');\n  const connectingAudio = new Audio('./voicechat_connecting.mp3');\n  connectingAudio.loop = true;\n  const leaveAudio = new Audio('./voicechat_leave.mp3');\n  const allowTalkAudio = new Audio('./voicechat_onallowtalk.mp3');\n  const busyAudio = new Audio('./call_busy.mp3');\n  const connectAudio = new Audio('./call_connect.mp3');\n  const endAudio = new Audio('./call_end.mp3');\n  const incomingAudio = new Audio('./call_incoming.mp3');\n  incomingAudio.loop = true;\n  const ringingAudio = new Audio('./call_ringing.mp3');\n  ringingAudio.loop = true;\n\n  sounds = {\n    join: joinAudio,\n    allowTalk: allowTalkAudio,\n    leave: leaveAudio,\n    connecting: connectingAudio,\n    incoming: incomingAudio,\n    end: endAudio,\n    connect: connectAudio,\n    busy: busyAudio,\n    ringing: ringingAudio,\n  };\n}\n\nasync function fetchGroupCall<T extends GlobalState>(global: T, groupCall: Partial<ApiGroupCall>) {\n  const result = await callApi('getGroupCall', {\n    call: groupCall,\n  });\n\n  if (!result) return undefined;\n\n  global = getGlobal();\n\n  const existingGroupCall = selectGroupCall(global, groupCall.id!);\n\n  global = updateGroupCall(\n    global,\n    groupCall.id!,\n    omit(result.groupCall, ['connectionState']),\n    undefined,\n    existingGroupCall?.isLoaded ? undefined : result.groupCall.participantsCount,\n  );\n\n  setGlobal(global);\n\n  return result.groupCall;\n}\n\nfunction requestGroupCallParticipants(\n  groupCall: Partial<ApiGroupCall>, nextOffset?: string,\n) {\n  return callApi('fetchGroupCallParticipants', {\n    call: groupCall as ApiGroupCall,\n    offset: nextOffset,\n  });\n}\n\naddActionHandler('toggleGroupCallPanel', (global, actions, payload): ActionReturnType => {\n  const { force, tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    isCallPanelVisible: 'force' in (payload || {}) ? force : !selectTabState(global, tabId).isCallPanelVisible,\n  }, tabId);\n});\n\naddActionHandler('subscribeToGroupCallUpdates', async (global, actions, payload): Promise<void> => {\n  const { subscribed, id } = payload!;\n  const groupCall = selectGroupCall(global, id);\n\n  if (!groupCall) return;\n\n  if (subscribed) {\n    await fetchGroupCall(global, groupCall);\n    global = getGlobal();\n    await requestGroupCallParticipants(groupCall);\n  }\n\n  await callApi('toggleGroupCallStartSubscription', {\n    subscribed,\n    call: groupCall,\n  });\n});\n\naddActionHandler('createGroupCall', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('createGroupCall', {\n    peer: chat,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateGroupCall(global, result.id, {\n    ...result,\n    chatId,\n  });\n  setGlobal(global);\n\n  actions.requestMasterAndJoinGroupCall({ id: result.id, accessHash: result.accessHash, tabId });\n});\n\naddActionHandler('createGroupCallInviteLink', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n\n  let inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  if (hasPublicUsername) {\n    inviteLink = await callApi('exportGroupCallInvite', {\n      call: groupCall,\n      canSelfUnmute: false,\n    });\n  }\n\n  if (!inviteLink) {\n    return;\n  }\n\n  copyTextToClipboard(inviteLink);\n  actions.showNotification({\n    message: {\n      key: 'LinkCopied',\n    },\n    tabId,\n  });\n});\n\naddActionHandler('joinVoiceChatByLink', async (global, actions, payload): Promise<void> => {\n  const { username, inviteHash, tabId = getCurrentTabId() } = payload;\n\n  const chat = await fetchChatByUsername(global, username);\n\n  if (!chat) {\n    actions.showNotification({ message: langProvider.oldTranslate('NoUsernameFound'), tabId });\n    return;\n  }\n\n  global = getGlobal();\n  const full = await loadFullChat(global, actions, chat);\n\n  if (full?.groupCall) {\n    actions.requestMasterAndJoinGroupCall({\n      id: full.groupCall.id,\n      accessHash: full.groupCall.accessHash,\n      inviteHash,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('requestMasterAndJoinGroupCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'joinGroupCall',\n    payload,\n    tabId: payload.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('requestMasterAndAcceptCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'acceptCall',\n    payload: undefined,\n    tabId: payload?.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('joinGroupCall', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, id, accessHash, inviteHash, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (!ARE_CALLS_SUPPORTED) {\n    actions.showNotification({\n      message: \"Sorry, your browser doesn't support group calls\",\n      tabId,\n    });\n    return;\n  }\n\n  if (global.phoneCall) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  createAudioElement();\n\n  initializeSounds();\n  global = getGlobal();\n  void checkNavigatorUserMediaPermissions(global, actions, true, tabId);\n\n  const { groupCalls: { activeGroupCallId } } = global;\n  let groupCall = id ? selectGroupCall(global, id) : selectChatGroupCall(global, chatId!);\n\n  if (groupCall && groupCall.id === activeGroupCallId) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  if (activeGroupCallId) {\n    if ('leaveGroupCall' in actions) {\n      actions.leaveGroupCall({\n        rejoin: payload,\n        tabId,\n      });\n    }\n    return;\n  }\n\n  if (groupCall && activeGroupCallId === groupCall.id) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  if (!groupCall && (!id || !accessHash) && chatId) {\n    const chat = selectChat(global, chatId);\n\n    if (!chat) return;\n\n    await loadFullChat(global, actions, chat);\n    global = getGlobal();\n    groupCall = selectChatGroupCall(global, chatId);\n  } else if (!groupCall && id && accessHash) {\n    groupCall = await fetchGroupCall(global, {\n      id,\n      accessHash,\n    });\n  }\n\n  if (!groupCall) return;\n\n  global = getGlobal();\n  global = updateGroupCall(\n    global,\n    groupCall.id,\n    {\n      ...groupCall,\n      inviteHash,\n    },\n    undefined,\n    groupCall.participantsCount + 1,\n  );\n  global = {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      activeGroupCallId: groupCall.id,\n    },\n  };\n\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: false, tabId });\n});\n\naddActionHandler('playGroupCallSound', (global, actions, payload): ActionReturnType => {\n  const { sound } = payload!;\n\n  if (!sounds[sound]) {\n    return;\n  }\n\n  const doPlay = () => {\n    if (sound !== 'connecting') {\n      sounds.connecting.pause();\n    }\n    if (sound !== 'incoming') {\n      sounds.incoming.pause();\n    }\n    if (sound !== 'ringing') {\n      sounds.ringing.pause();\n    }\n    safePlay(sounds[sound]);\n  };\n\n  doPlay();\n});\n\naddActionHandler('loadMoreGroupCallParticipants', (global): ActionReturnType => {\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) {\n    return;\n  }\n\n  void requestGroupCallParticipants(groupCall, groupCall.nextOffset);\n});\n\naddActionHandler('requestMasterAndRequestCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'requestCall',\n    payload,\n    tabId: payload.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('requestCall', (global, actions, payload): ActionReturnType => {\n  const { userId, isVideo, tabId = getCurrentTabId() } = payload;\n\n  if (global.phoneCall) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  const user = selectUser(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  initializeSounds();\n  global = getGlobal();\n  void checkNavigatorUserMediaPermissions(global, actions, isVideo, tabId);\n\n  global = getGlobal();\n  global = {\n    ...global,\n    phoneCall: {\n      id: '',\n      state: 'requesting',\n      participantId: userId,\n      isVideo,\n      adminId: global.currentUserId,\n    },\n  };\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: false, tabId });\n});\n\nfunction createAudioContext() {\n  return (new (window.AudioContext || (window as any).webkitAudioContext)());\n}\n\nconst silence = (ctx: AudioContext) => {\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  return new MediaStream([Object.assign((dst as any).stream.getAudioTracks()[0], { enabled: false })]);\n};\n\nfunction createAudioElement() {\n  const ctx = createAudioContext();\n  audioElement = new Audio();\n  audioContext = ctx;\n  audioElement.srcObject = silence(ctx);\n  safePlay(audioElement);\n}\n\nexport function getGroupCallAudioElement() {\n  return audioElement;\n}\n\nexport function getGroupCallAudioContext() {\n  return audioContext;\n}\n\nexport function removeGroupCallAudioElement() {\n  audioElement?.pause();\n  audioContext = undefined;\n  audioElement = undefined;\n}\n\n// This method is used instead of a navigator.permissions.query to determine permission to use a microphone,\n// because Firefox does not have support for 'microphone' and 'camera' permissions\n// https://github.com/mozilla/standards-positions/issues/19#issuecomment-370158947\nexport function checkNavigatorUserMediaPermissions<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions, isVideo?: boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  if (isVideo) {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        if (stream.getVideoTracks().length === 0) {\n          actions.showNotification({\n            message: langProvider.oldTranslate('Call.Camera.Error'),\n            tabId,\n          });\n        } else {\n          stream.getTracks().forEach((track) => track.stop());\n          checkMicrophonePermission(global, actions, tabId);\n        }\n      })\n      .catch(() => {\n        actions.showNotification({\n          message: langProvider.oldTranslate('Call.Camera.Error'),\n          tabId,\n        });\n      });\n  } else {\n    checkMicrophonePermission(global, actions, tabId);\n  }\n}\n\nfunction checkMicrophonePermission<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  navigator.mediaDevices.getUserMedia({ audio: true })\n    .then((stream) => {\n      if (stream.getAudioTracks().length === 0) {\n        actions.showNotification({\n          message: langProvider.oldTranslate('RequestAcces.Error.HaveNotAccess.Call'),\n          tabId,\n        });\n      } else {\n        stream.getTracks().forEach((track) => track.stop());\n      }\n    })\n    .catch(() => {\n      actions.showNotification({\n        message: langProvider.oldTranslate('RequestAcces.Error.HaveNotAccess.Call'),\n        tabId,\n      });\n    });\n}\n","import type { ApiGroupCall } from '../../api/types';\nimport type { GroupCallParticipant } from '../../lib/secret-sauce';\nimport type { GlobalState } from '../types';\n\nimport { omit } from '../../util/iteratees';\nimport { selectChat } from '../selectors';\nimport { selectGroupCall } from '../selectors/calls';\nimport { updateChatFullInfo } from './chats';\n\nexport function updateGroupCall<T extends GlobalState>(\n  global: T,\n  groupCallId: string,\n  groupCallUpdate: Partial<ApiGroupCall>,\n  addToParticipantCount?: number,\n  resetParticipantCount?: number,\n): T {\n  const unfiltered = Object.values({\n    ...global.groupCalls.byId[groupCallId]?.participants,\n    ...groupCallUpdate.participants,\n  });\n  const filtered = unfiltered.filter(({ isLeft }) => !isLeft);\n  const participants = filtered.reduce((acc: Record<string, GroupCallParticipant>, el) => {\n    acc[el.id] = el;\n    return acc;\n  }, {});\n\n  return {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      byId: {\n        ...global.groupCalls.byId,\n        [groupCallId]: {\n          ...global.groupCalls.byId[groupCallId],\n          ...omit(groupCallUpdate, ['participantsCount']),\n          ...(addToParticipantCount && {\n            participantsCount: global.groupCalls.byId[groupCallId].participantsCount + addToParticipantCount,\n          }),\n          ...(resetParticipantCount !== undefined && {\n            participantsCount: resetParticipantCount,\n          }),\n          participants,\n        },\n      },\n    },\n  };\n}\n\nexport function removeGroupCall<T extends GlobalState>(\n  global: T,\n  groupCallId: string,\n): T {\n  const groupCall = selectGroupCall(global, groupCallId);\n  if (groupCall && groupCall.chatId) {\n    const chat = selectChat(global, groupCall.chatId);\n    if (chat) {\n      global = updateChatFullInfo(global, groupCall.chatId, {\n        groupCallId: undefined,\n      });\n    }\n  }\n\n  return {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      byId: {\n        ...omit(global.groupCalls.byId, [groupCallId.toString()]),\n      },\n    },\n  };\n}\n\nexport function updateActiveGroupCall<T extends GlobalState>(\n  global: T,\n  groupCallUpdate: Partial<ApiGroupCall>,\n  resetParticipantCount?: number,\n): T {\n  if (!global.groupCalls.activeGroupCallId) {\n    return global;\n  }\n\n  return updateGroupCall(global,\n    global.groupCalls.activeGroupCallId,\n    groupCallUpdate,\n    undefined,\n    resetParticipantCount);\n}\n\nexport function updateGroupCallParticipant<T extends GlobalState>(\n  global: T,\n  groupCallId: string,\n  userId: string,\n  participantUpdate: Partial<GroupCallParticipant>,\n  noUpdateCount = false,\n): T {\n  const groupCall = selectGroupCall(global, groupCallId);\n  if (!groupCall) {\n    return global;\n  }\n\n  return updateGroupCall(global, groupCallId, {\n    participants: {\n      ...groupCall.participants,\n      [userId]: {\n        ...groupCall.participants[userId],\n        ...participantUpdate,\n      },\n    },\n  }, participantUpdate.isLeft\n    ? (noUpdateCount ? 0 : -1)\n    : (groupCall.participants[userId] || noUpdateCount ? 0 : 1));\n}\n"],"names":["MAIN_THREAD_ID","ChatCreationProgress","ManagementProgress","NewChatMembersProgress","SettingsScreens","ALL_FOLDER_ID","ARCHIVED_FOLDER_ID","CHAT_LIST_LOAD_SLICE","DEBUG","GLOBAL_SUGGESTED_CHANNELS_ID","RE_TG_LINK","SAVED_FOLDER_ID","SERVICE_NOTIFICATIONS_USER_ID","TME_WEB_DOMAINS","TMP_CHAT_ID","TOP_CHAT_MESSAGES_PRELOAD_LIMIT","TOPICS_SLICE","TOPICS_SLICE_SECOND_LOAD","copyTextToClipboard","formatShareText","processDeepLink","isDeepLink","getCurrentTabId","getOrderedIds","buildCollectionByKey","omit","pick","unique","isLocalMessageId","langProvider","debounce","pause","throttle","extractCurrentThemeParams","callApi","getIsSavedDialog","isChatArchived","isChatBasicGroup","isChatChannel","isChatSuperGroup","isUserBot","addActionHandler","getGlobal","setGlobal","addChatListIds","addChatMembers","addChats","addMessages","addSimilarBots","addUsers","addUserStatuses","deleteChatMessages","deletePeerPhoto","deleteTopic","leaveChat","removeChatFromChatLists","replaceChatFullInfo","replaceChatListIds","replaceChatListLoadingParameters","replaceMessages","replaceSimilarChannels","replaceThreadParam","replaceUserStatuses","toggleSimilarChannels","updateChat","updateChatFullInfo","updateChatLastMessageId","updateChatListSecondaryInfo","updateChats","updateChatsLastMessageId","updateListedTopicIds","updateManagementProgress","updateMissingInvitedUsers","updatePeerFullInfo","updateThread","updateThreadInfo","updateTopic","updateTopics","updateUser","updateUsers","updateGroupCall","updateTabState","selectChat","selectChatByUsername","selectChatFolder","selectChatFullInfo","selectChatLastMessageId","selectChatListLoadingParameters","selectChatListType","selectChatMessages","selectCurrentChat","selectCurrentMessageList","selectDraft","selectIsChatPinned","selectIsChatWithSelf","selectLastServiceNotification","selectPeer","selectSimilarChannelIds","selectStickerSet","selectSupportChat","selectTabState","selectThread","selectThreadInfo","selectTopic","selectTopics","selectTopicsInfo","selectUser","selectUserByPhoneNumber","selectGroupCall","selectCurrentLimit","TOP_CHAT_MESSAGES_PRELOAD_INTERVAL","INFINITE_LOOP_MARKER","CHATLIST_LIMIT_ERROR_LIST","Set","runThrottledForLoadTopChats","cb","runDebouncedForLoadFullChat","global","actions","preloadedChatIds","i","currentChatIds","Object","values","byTabId","map","id","tabId","chatId","filter","Boolean","folderAllOrderedIds","nextChatId","find","includes","has","add","loadViewportMessages","threadId","abortChatRequests","abortChatRequestsForCurrentChat","newChatId","newThreadId","currentMessageList","currentChatId","currentThreadId","isChatOpened","isThreadOpened","reduce","accHasChatOpened","accHasThreadOpened","otherTabId","otherMessageList","isSameChat","isSameThread","shouldAbortChatRequests","undefined","payload","type","noForumTopicPanel","shouldReplaceHistory","shouldReplaceLast","processOpenChatOrThread","chat","hasUnreadMark","toggleChatUnread","isChatOnlySummary","user","isMin","requestChatUpdate","otherParams","openThread","currentUserId","isComments","focusMessageId","loadingChatId","loadingThreadId","originalChat","openChat","isForum","originChannelId","originMessageId","threadInfo","thread","listedIds","length","Number","loadingThread","loadingMessageId","openPreviousChat","currentGlobal","result","messageId","showNotification","message","oldTranslate","messages","isCommentsInfo","fromChannelId","fromMessageId","firstMessageId","focusMessage","onError","onLoaded","chatFullInfo","fullInfo","linkedChatId","whenFirstBatchDone","listType","isCallbackFired","chats","isFullyLoaded","console","error","connectionState","authState","loadChats","force","withPhotos","loadChat","loadFullChat","loadMoreProfilePhotos","peerId","shouldInvalidateCache","lastLocalMessage","isSavedDialog","limit","forEach","tabChatId","muteUntil","isMuted","topicId","title","about","photo","memberIds","users","chatCreation","progress","InProgress","createdChannel","missingInvitedUsers","channel","missingUsers","Error","openLimitReachedModal","showDialog","data","hasErrorKey","channelId","accessHash","Complete","userId","shouldRevokeHistory","chatMessages","localMessageIds","keys","createdChat","err","folderId","folder","shouldBePinned","pinnedChatIds","includedChatIds","newPinnedIds","pinnedId","newIncludedChatIds","folderUpdate","isPinned","ids","orderedPinnedIds","saved","chatFolders","recommendedChatFolders","recommended","idsToRemove","idsToAdd","isLimitReached","some","includedId","concat","emoticon","orderedIds","byId","maxId","Math","max","recommendedId","description","newFolder","newId","apiUpdate","requestNextSettingsScreen","foldersAction","folderIds","unreadCount","topic","lastTopicMessageId","lastMessageId","lastReadInboxMessageId","hash","invite","subscriptionFormId","starsPayment","inputInvoice","subscriptionInfo","status","chatInviteModal","inviteInfo","phoneNumber","startAttach","attach","text","fetchChatByPhoneNumber","replace","openChatWithDraft","openAttachMenuFromLink","url","shouldIgnoreCache","openChatByPhoneNumber","checkChatInvite","openStickerSet","joinVoiceChatByLink","openInvoice","checkChatlistInvite","openChatByUsername","openChatByUsernameAction","openStoryViewerByUsername","checkGiftCode","isProcessed","match","uri","URL","toLowerCase","startsWith","hostname","pathname","window","open","toString","hostParts","split","adaptedPathname","part1","part2","part3","part","decodeURI","params","fromEntries","searchParams","storyId","substr","startattach","username","stickerSetInfo","shortName","slug","chatOrChannelPostId","commentId","comment","isWebApp","checkWebAppExists","shouldTryOpenChat","isInteger","hasOwnProperty","inviteHash","voicechat","livestream","substring","startParam","start","startApp","startapp","mode","originalParts","openUrl","shouldSkipModal","ignoreDeepLinks","usernameOrId","isPrivate","key","fetchChatByUsername","openBoostModal","onChatChanged","choose","ref","webAppName","usernames","c","processAttachBotParameters","theme","chatByUsername","hasMainMiniApp","requestMainWebView","botId","channelPostId","action","usernameChat","requestAppWebView","appName","openChatWithParams","isEnabled","ensureIsSuperGroup","isPreHistoryHidden","bannedRights","updatedFullInfo","members","kickedMembers","isBanned","viewMessages","isUnblocked","m","adminRights","customTitle","chatAfterUpdate","adminMembersById","isDismissed","newAdminMembersById","remove","rest","Promise","all","isDeleted","avatarPhotoId","areProfilesEnabled","areSignaturesEnabled","groups","addedById","group","forDiscussionIds","fullChat","activeChatFolder","maxFolders","isBlocked","requestedDraft","offset","membersCount","userStatusesById","setNewChatMembersDialogState","newChatMembersProgress","Loading","Closed","isProtected","enabledReactions","reactionsLimit","settings","toggleStoryRibbon","isShown","isArchived","forumPanelChatId","bot","getAttachBotOrNotify","isForChat","callAttachBot","isFromSideMenu","attachMenu","bots","requestedAttachBotInstall","onConfirm","requestAttachBotInChat","topicsInfo","listedTopicIds","totalCount","offsetTopic","acc","el","accTopic","offsetTopicId","date","offsetDate","offsetId","count","topics","entries","draftsById","draft","readInboxMessageIdByTopicId","shouldCloseChatOnError","closeForumPanel","openForumPanel","prevIsEnabled","areParticipantsHidden","iconColor","iconEmojiId","createTopicPanel","isLoading","closeCreateTopicPanel","editTopicPanel","closeEditTopicPanel","topicsPinnedLimit","appConfig","chatlistModal","peerIds","peers","currentNotJoinedCount","peer","isNotJoined","existingFolder","folderTitle","variables","options","pluralValue","invites","shareFolderScreen","screen","Folders","pop","isConfirmedForChatlist","isChatList","hasMyInvites","currentIds","suggestions","removal","suggestedPeerIds","deleteFolderDialogModal","detectedLanguage","isTranslationDisabled","isForumAsMessages","similarChannelIds","similarChannels","chatsById","similarBots","chatLink","collectible","inputCollectible","phone","collectibleInfoModal","isFullDraftSync","shouldIgnorePagination","lastLocalServiceMessageId","offsetPeer","nextOffsetPeerId","nextOffsetDate","nextOffsetId","isFirstBatch","withPinned","archived","chatIds","newChats","lastMessageByChatId","idsToUpdateDraft","isLocal","totalChatCount","groupCall","existingGroupCall","participantsCount","stickerSet","localSet","loadStickers","emojiSet","localEmojiSet","migrateChat","supergroup","referrer","localChat","botName","botApp","localUser","isBot","currentChat","isCurrentChat","starRefStartPrefixes","prefix","p","slice","isTopicProcessed","topicResult","startBot","param","newChat","requestNextMutation","safePlay","ARE_CALLS_SUPPORTED","getMainUsername","selectActiveGroupCall","selectChatGroupCall","silentSound","audioElement","audioContext","sounds","initializeSoundsForSafari","initializeSounds","sound","prevSrc","src","muted","volume","play","then","currentTime","joinAudio","Audio","connectingAudio","loop","leaveAudio","allowTalkAudio","busyAudio","connectAudio","endAudio","incomingAudio","ringingAudio","join","allowTalk","leave","connecting","incoming","end","connect","busy","ringing","fetchGroupCall","call","isLoaded","requestGroupCallParticipants","nextOffset","isCallPanelVisible","subscribed","requestMasterAndJoinGroupCall","hasPublicUsername","inviteLink","canSelfUnmute","full","requestMasterAndCallAction","phoneCall","toggleGroupCallPanel","createAudioElement","checkNavigatorUserMediaPermissions","groupCalls","activeGroupCallId","leaveGroupCall","rejoin","doPlay","isVideo","state","participantId","adminId","createAudioContext","AudioContext","webkitAudioContext","silence","ctx","oscillator","createOscillator","dst","createMediaStreamDestination","MediaStream","assign","stream","getAudioTracks","enabled","srcObject","getGroupCallAudioElement","getGroupCallAudioContext","removeGroupCallAudioElement","navigator","mediaDevices","getUserMedia","video","getVideoTracks","getTracks","track","stop","checkMicrophonePermission","catch","audio","groupCallId","groupCallUpdate","addToParticipantCount","resetParticipantCount","unfiltered","participants","filtered","isLeft","removeGroupCall","updateActiveGroupCall","updateGroupCallParticipant","participantUpdate","noUpdateCount"],"sourceRoot":""}